#makes sense since it is a linear sum
ilogit(eta0)
#the covariance matrix
#how the variables vary together
cm<-lmodsum$cov.unscaled
#standard error on the logit scale is then
se<-sqrt(t(x0)%*%cm%*%x0)
#so the CI on the probability scale is then
ilogit(c(eta0-1.96*se,eta0+1.96*se))
(a<-predict(modl,newdata = data.frame(conc=2.5),se=TRUE))
ilogit(c(a$fit-1.96*a$se.fit,a$fit+1.96*a$se.fit))
x0 <- c(1,-5)
se <- sqrt(t(x0) %*% cm %*% x0)
eta0 <- sum(x0*modl$coef)
ilogit(c(eta0-1.96*se, eta0+1.96*se))
(ld50<- -modl$coefficients[1]/modl$coefficients[2])
dr <- c(-1/modl$coefficients[2],lmod$coefficients[1]/modl$coefficients[2]^2)
varg<-lmodsum$cov.unscaled
sqrt(dr%*%lmodsum$cov.un%*%dr)[,]
library(MASS)
dose.p(modl,p=c(.5,.9))
data(troutegg)
head(troutegg)
troutegg%>%arrange(location)%>%relocate(location,period,survive,total)
bmod<-glm(cbind(survive,total-survive)~location+period, family=binomial(),troutegg)
bmod
pchisq(64.5,12, lower=FALSE)
library(ggResidpanel)
resid_interact(bmod, plots='all')
halfnorm(residuals(bmod))
rbind(troutegg[15,],troutegg[20,])
elogits <-
log((troutegg$survive+0.5)/(troutegg$total-
troutegg$survive+0.5))
with(troutegg,interaction.plot(period,location,elogits)
)
df<-data.frame(elogits=elogits,period=troutegg$period,location=troutegg$location)
ggplot(df,aes(x=period,y=elogits,group=location,color=location))+geom_point()+geom_smooth(se=FALSE, method="loess", span=0.5)+ggtitle('interaction plot')
(sigma2<-sum(residuals(bmod,type='pearson')^2)/12)
drop1(bmod,scale=sigma2,test='F')
drop1(bmod,test='F')
summary(bmod, dispersion=sigma2)
summary(bmod)
view(babyfood)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(faraway)
library(GGally)
data(gala)
gala<-gala[,-2]
ggpairs(gala)
library(ggResidpanel)
modl<-lm(Species~.,gala)
resid_panel(modl,plots = 'all')
boxcox(modl)
boxCox(modl)
library(car)
boxCox(modl)
library(car)
#create test data frame with +.01 to Scruz to get rid of zeros
gala2<-gala%>%mutate(Scruz=Scruz+.01)
powerTransform(gala2)
gala<-gala%>%mutate(Species=sqrt(Species))
ggpairs(gala)
modt<-lm(Species~.,gala)
resid_panel(modt)
summary(modt)
gala<-gala
gala<-gala[,-2]
modp<-glm(Species~.,family=poisson,gala)
summary(modp)
View(gala)
library(GGally)
data(gala)
gala<-gala[,-2]
ggpairs(gala)
library(ggResidpanel)
modl<-lm(Species~.,gala)
resid_panel(modl,plots = 'all')
library(car)
boxCox(modl)
library(car)
#create test data frame with +.01 to Scruz to get rid of zeros
gala2<-gala%>%mutate(Scruz=Scruz+.01)
powerTransform(gala2)
gala2<-gala2%>%mutate(Species=sqrt(Species))
ggpairs(gala2)
modt<-lm(Species~.,gala2)
resid_panel(modt)
summary(modt)
gala<-gala
gala<-gala[,-2]
modp<-glm(Species~.,family=poisson,gala)
summary(modp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(faraway)
library(GGally)
data(gala)
gala<-gala[,-2]
ggpairs(gala)
library(ggResidpanel)
modl<-lm(Species~.,gala)
resid_panel(modl,plots = 'all')
library(car)
boxCox(modl)
library(car)
#create test data frame with +.01 to Scruz to get rid of zeros
gala2<-gala%>%mutate(Scruz=Scruz+.01)
powerTransform(gala2)
gala2<-gala2%>%mutate(Species=sqrt(Species))
ggpairs(gala2)
modt<-lm(Species~.,gala2)
resid_panel(modt)
summary(modt)
gala_glm<-gala
#gala<-gala[,-2]
modp<-glm(Species~.,family=poisson,gala_glm)
summary(modp)
pchisq(716.85,24,lower.tail = FALSE)
halfnorm(residuals(modp))
#formula for R^2_dev
1-717/3510
library(latex2exp)
ggplot(gala, aes(x=log(fitted(modp)),y=log((Species-fitted(modp))^2)))+geom_point()+xlab('$\\hat{\\mu}$')+geom_abline(intercept = 0,slope = 1)
(dp <-
sum(residuals(modp,type="pearson")^2)/modp$df.res)
summary(modp,dispersion=dp)
summary(modp)
drop1(modp,test="F")
data(dicentric)
round(xtabs(ca/cells~doseamt+doserate,dicentric),2)
dicentric<-dicentric%>%mutate(doserate=as.factor(doserate))
ggplot(dicentric,aes(x=doseamt,y=ca/cells,group=doserate,color=doserate))+geom_smooth()+scale_color_brewer(palette="Dark2")
data(dicentric)
lmod <- lm(ca/cells ~ log(doserate)*factor(doseamt),
dicentric)
summary(lmod)
resid_panel(lmod)
ggpairs(dicentric)
dicentric$dosef<-factor(dicentric$doseamt)
pmod<-glm(ca~log(cells)+log(doserate)*dosef,family=poisson,dicentric)
summary(pmod)
rmod <- glm(ca ~ offset
(log(cells))+log(doserate)*dosef,
family=poisson,dicentric)
summary(rmod)
resid_panel(rmod)
library(kableExtra)
p<-seq(0,1,.1)
alpha<-(1-p)/p
df<-data.frame(probability=p,alpha=alpha)
df%>%kbl()%>%kable_classic_2()
ggplot(df, aes(x=probability, y=alpha))+geom_smooth(method='loess')
data(solder)
modp<-glm(skips~.,family = poisson, data=solder)
summary(modp)
anova(modp, test='Chisq')
pchisq(1829,882, lower.tail = FALSE)
modp2<-glm(skips~(Opening+Solder+Mask+PadType+Panel)^2,family=poisson, data = solder)
summary(modp2)
pchisq(1069,790,lower.tail = FALSE)
library(MASS)
modn<-glm(skips~.,negative.binomial(1),solder)
modn
modn<-glm.nb(skips~.,solder)
summary(modn)
data("discoveries")
print(discoveries)
plot(discoveries)
years<-seq(1860,1959,1)
df<-data.frame(years=years, disc=discoveries)
#make a list of potential models
discmod_list<-list()
disc_p<-glm(disc~years,family=poisson,data=df)
summary(disc_p)
pchisq(157,98,lower.tail=FALSE)
summary(disc_p)$coef['years','Pr(>|z|)']
disc_p_quad<-glm(disc~poly(years,2),family=poisson,data=df)
summary(disc_p_quad)
pchisq(132,97,lower.tail=FALSE)
ggplot(df,aes(x=years,y=disc))+geom_smooth()
halfnorm(residuals(disc_p))
ggplot(df, aes(x=log(fitted(disc_p)),y=log((disc-fitted(disc_p))^2)))+geom_point()+geom_abline(intercept = 0,slope = 1)
(dp <-
sum(residuals(disc_p,type="pearson")^2)/disc_p$df.res)
summary(disc_p,dispersion=dp)
pchisq(157,98,lower.tail=FALSE)
data(discoveries)
### The dataset discoveries lists the numbers of \great" inventions
### and scientific discoveries in each year from 1860 to 1959. Has the
### discovery rate remained constant over time?
year=1860:1959
g=glm(discoveries ~ year, family="poisson")
summary(g)$coef['year','Pr(>|z|)']
drop1(g, test="F")
dp=sum(residuals(g, typp="pearson")^2)/df.residual(g); dp
(g$null.deviance - g$deviance)/dp
summary(g, dispersion=dp)
modn<-glm.nb(disc~.,df)
summary(modn)
pchisq(108,98,lower.tail=FALSE)
pchisq(114-108,1,lower.tail = FALSE)
data(salmonella)
ggplot(salmonella,aes(x=dose,y=colonies))+geom_point()
modp<-glm(colonies~dose,family=poisson,data=salmonella)
summary(modp)
pchisq(75.8,16,lower.tail=FALSE)
pchisq(55.5,15,lower.tail=FALSE)
resid_panel(modp)
sal.fit <- glm(data= salmonella, formula = colonies ~ factor(dose), family = poisson)
summary(sal.fit)
library(arm)
display(sal.fit)
meanv<-tapply(salmonella$colonies, salmonella$dose, function(x)c(mean = mean(x),variance = var(x)))
#turn list of lists into dataframe
df<-as.data.frame(do.call(rbind,meanv))
df<-cbind(dose = rownames(df),df)
rownames(df)<-1:nrow(df)
ggplot(df,aes(x=mean,y=variance))+geom_smooth()
pchisq(33.496,12,lower.tail=FALSE)
sal.fit1 <- glm(data= salmonella, formula = colonies ~ dose, family = poisson)
summary(sal.fit1)
plot(sal.fit1,which =1 )
plot(colonies ~ dose, data = salmonella)
lines(x = salmonella$dose, y= predict.glm(sal.fit1, type = "response") )
sal.fit2 <- glm(colonies ~ poly(dose, 4),data = salmonella, family = poisson(link = "log"))
summary(sal.fit2)
pchisq(34.98,13,lower.tail = FALSE)
plot(sal.fit2,which =1 )
sal.fit3 <- glm(colonies ~ poly(dose, 4),data = salmonella, family = quasipoisson(link = "log"))
summary(sal.fit3)
(dp <-
sum(residuals(sal.fit2,type="pearson")^2)/sal.fit1$df.res)
summary(sal.fit2,dispersion=dp)
library(MASS)
ships<-MASS::ships
ships<-relocate(ships, incidents)
summary(ships)
ships<-ships%>%filter(service>0)
lmod<-lm(data=ships, incidents/service~type+year+period)
resid_panel(lmod)
glm_list=list()
glm_list[['All']]<-glm(
incidents~type+year+period,offset = log(service),family = poisson,data=ships
)
glm_list[['quasi']]<-glm(
incidents~type+year+period,offset=log(service),family=quasipoisson(),data=ships
)
#negative binomial if we infer that the possible range of accidents is infinite
glm_list[['nb']]<-glm.nb(
incidents~.,ships
)
lapply(glm_list,
function(x)anova(
object=x,
test='Chisq'
))
lapply(
glm_list,
FUN=AIC
)
summary(glm_list[['All']],dispersion=2.43)
modnb<-glm_list[['All']]
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()+geom_abline(slope=1,intercept=0)
anova(glm_list[['quasi']],test='F')
ships2<-ships
glm1 <- glm(incidents ~ type + year + period,
family = poisson(link = "log"), data = ships2, offset = log(service))
summary(glm1)
par(mfrow=c(2,2))
resid_panel(glm1)
glm2 <- update(glm1, family = quasipoisson(link = "log"))
summary(glm2)
resid_panel(glm2)
anova(glm2, test = "F")
# check if damage is roughly proportional to service
glm3 <- glm(formula = incidents ~ type + year + period + log(service),
family = quasipoisson(link = "log"), data = ships2)
summary(glm3)
(dp <-
sum(residuals(modp,type="pearson")^2)/modp$df.res)
install.packages('AER')
AER::dispersiontest(modp)
install.packages('DHARMa')
library(DHARMa)
sim_modp<-DHARMa::simulateResiduals(modp,refit=T)
DHARMa::testOverdispersion(sim_modp)
plotSimulatedResiduals(sim_fmp)
DHARMa::plotSimulatedResiduals(sim_modp)
summary(modp,dispersion=dp)
summary(modp,dispersion=dp)
summary(modp)
drop1(modp,test="F")
data(dicentric)
round(xtabs(ca/cells~doseamt+doserate,dicentric),2)
dicentric<-dicentric%>%mutate(doserate=as.factor(doserate))
ggplot(dicentric,aes(x=doseamt,y=ca/cells,group=doserate,color=doserate))+geom_smooth()+scale_color_brewer(palette="Dark2")
data(dicentric)
lmod <- lm(ca/cells ~ log(doserate)*factor(doseamt),
dicentric)
summary(lmod)
dicentric$dosef<-factor(dicentric$doseamt)
pmod<-glm(ca~log(cells)+log(doserate)*dosef,family=poisson,dicentric)
summary(pmod)
rmod <- glm(ca ~ offset
(log(cells))+log(doserate)*dosef,
family=poisson,dicentric)
summary(rmod)
resid_panel(rmod)
library(kableExtra)
p<-seq(0,1,.1)
alpha<-(1-p)/p
df<-data.frame(probability=p,alpha=alpha)
df%>%kbl()%>%kable_classic_2()
data(solder)
modp<-glm(skips~.,family = poisson, data=solder)
summary(modp)
View(solder)
halfnorm(residuals(modp2))
library(MASS)
modn<-glm(skips~.,negative.binomial(1),solder)
modn
summary(modn)
modn<-glm.nb(skips~.,solder)
summary(modn)
meanv<-tapply(salmonella$colonies, salmonella$dose, function(x)c(mean = mean(x),variance = var(x)))
View(meanv)
#turn list of lists into dataframe
df<-as.data.frame(do.call(rbind,meanv))
df<-cbind(dose = rownames(df),df)
rownames(df)<-1:nrow(df)
ggplot(df,aes(x=mean,y=variance))+geom_smooth()
glm_list=list()
glm_list[['All']]<-glm(
incidents~type+year+period,offset = log(service),family = poisson,data=ships
)
glm_list[['quasi']]<-glm(
incidents~type+year+period,offset=log(service),family=quasipoisson(),data=ships
)
#negative binomial if we infer that the possible range of accidents is infinite
glm_list[['nb']]<-glm.nb(
incidents~.,ships
)
lapply(glm_list,
function(x)anova(
object=x,
test='Chisq'
))
lapply(
glm_list,
FUN=AIC
)
anova(glm_list[['quasi']],test='F')
glm2 <- update(glm1, family = quasipoisson(link = "log"))
summary(glm2)
resid_panel(glm2)
anova(glm2, test = "F")
# check if damage is roughly proportional to service
glm3 <- glm(formula = incidents ~ type + year + period + log(service),
family = quasipoisson(link = "log"), data = ships2)
summary(glm3)
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
data(orings)
plot (damage/6 ~ temp, orings, xlim=c(25,85), ylim =
c(0,1),
xlab="Temperature", ylab="Prob of damage")
library(tidyverse)
ggplot(orings, aes(y=damage/6,x=temp))+geom_point()+xlab('Temperature')+ylab('Prob of Damage')
lmod<-lm(damage/6~temp, orings)
library(ggResidpanel)
ggplot(orings, aes(x=temp,y=damage/6))+geom_point()+geom_smooth(method='lm', se=FALSE)
summary(lmod)
logitmod<-glm(cbind(damage,6-damage)~temp, family=binomial(), data=orings)
summary(logitmod)
pchisq(16.912, 21, lower=FALSE)
library(car)
mmps(logitmod)
plot (damage/6 ~ temp, orings, xlim=c(25,85),
ylim=c(0,1),
xlab="Temperature", ylab="Prob of damage")
x <- seq(25,85,1)
lines(x,ilogit(11.6630−0.2162*x))
probitmod<-glm(cbind(damage,6-damage)~temp, family=binomial(link=probit),orings)
summary(probitmod)
plot (damage/6 ~ temp, orings, xlim=c(25,85),
ylim=c(0,1),
xlab="Temperature", ylab="Prob of damage")
x <- seq(25,85,1)
lines(x,ilogit(11.6630−0.2162*x))
lines(x, pnorm(5.5915-0.1058*x), lty=2)
l<-ilogit (11.6630-0.2162*31)
p<-pnorm(5.5915-0.1058*31)
cat('logit estimation at 31F:',l,'\nProbit estimation at 31F:',p)
pchisq(deviance(logitmod), df.residual(logitmod),lower=FALSE)
pchisq(38.9,22,lower=FALSE)
dev_dif<-(38.9-16.9)
pchisq(dev_dif,1,lower=FALSE)
library(MASS)
confint(logitmod)
library(kableExtra)
data("babyfood")
xtabs(disease/(disease+nondisease)~sex+food, babyfood)%>%kbl()%>%kable_classic()
mdl<-glm(cbind(disease,nondisease)~sex+food, family = binomial(), babyfood)
summary(mdl)
drop1(mdl,test="Chi")
exp(mdl$coefficients[3])
confint(mdl)
exp(confint(mdl))%>%kbl%>%kable_classic()
#log odds for SUPPLIMENT to have  lower disease than bottle feeding
log_odds<-(-.173)
1-exp(-0.17)
a<-babyfood[c(1,3),]
a<-a%>%mutate(log_odds=log(disease/nondisease),.before=sex)
a%>%kbl%>%kable_classic()
data(bliss)
bliss
mod1<-glm(cbind(dead,alive)~conc,family=binomial(),data=bliss)
modp <- glm(cbind(dead, alive) ~ conc,
family=binomial(link=probit),
data=bliss)
modc<-glm(cbind(dead, alive) ~ conc,
family=binomial(link=cloglog),
data=bliss)
fitted(mod1)
predict (mod1, type='response')
#take the logit, because the predictors are from the logit function (these are the betas in the exponents.)
ilogit(mod1$linear.predictors)
d<-data.frame('logit'=fitted(mod1),'probit'=fitted(modp),'loglog'=fitted(modc))
d%>%kbl%>%kable_classic_2()
x<-seq(-2,8,0.2)
p1<-ilogit(mod1$coefficients[1]+mod1$coefficients[2]*x)
pp<-pnorm(modp$coefficients[1]+modp$coefficients[2]*x)
pc<-1-exp(-exp((modc$coefficients[1]+modc$coefficients[2]*x)))
plot(x,p1,type='l', ylab = "Probability",xlab='Dose')
lines(x,pp,lty=2)
lines(x,pc,lty=5)
x <- seq(-2,8,0.2)
modl<-mod1
pl <- ilogit(modl$coef[1]+modl$coef[2]*x)
pp <- pnorm(modp$coef[1]+modp$coef[2]*x)
pc <- 1-exp(-exp((modc$coef[1]+modc$coef[2]*x)))
plot(x,pl,type="l",ylab="Probability",xlab="Dose")
lines(x,pp,lty=2)
lines(x,pc,lty=5)
matplot(x,cbind(pp/pl,(1-pp)/(1-
pl)),type="l",xlab="Dose",ylab="Ratio")
matplot(x,cbind(pc/pl,(1-pc)/(1-
pl)),type="l",xlab="Dose",ylab="Ratio")
data("hormone")
plot(estrogen~androgen, data=hormone, pch=as.character(orientation))
ggplot(hormone, aes(x=androgen,y=estrogen, color=orientation))+geom_point()
modl<-glm(orientation~estrogen+androgen, family = binomial(), data=hormone)
summary(modl)
ggplot(hormone, aes(x=androgen,y=estrogen, color=orientation))+geom_point()+geom_abline(intercept=-84.5/90.2,slope=100.9/90.2)
data(bliss)
modl<-glm(cbind(dead,alive)~conc, family=binomial(), data=bliss)
lmodsum<-summary(modl)
x0<-c(1,2.5)
#this is a dot product
eta0<-sum(x0*coef(modl))
#dot product verison
paste(x0%*%coef(modl),eta0)
#makes sense since it is a linear sum
ilogit(eta0)
#the covariance matrix
#how the variables vary together
cm<-lmodsum$cov.unscaled
#standard error on the logit scale is then
se<-sqrt(t(x0)%*%cm%*%x0)
#so the CI on the probability scale is then
ilogit(c(eta0-1.96*se,eta0+1.96*se))
(a<-predict(modl,newdata = data.frame(conc=2.5),se=TRUE))
ilogit(c(a$fit-1.96*a$se.fit,a$fit+1.96*a$se.fit))
x0 <- c(1,-5)
se <- sqrt(t(x0) %*% cm %*% x0)
eta0 <- sum(x0*modl$coef)
ilogit(c(eta0-1.96*se, eta0+1.96*se))
(ld50<- -modl$coefficients[1]/modl$coefficients[2])
dr <- c(-1/modl$coefficients[2],lmod$coefficients[1]/modl$coefficients[2]^2)
varg<-lmodsum$cov.unscaled
sqrt(dr%*%lmodsum$cov.un%*%dr)[,]
library(MASS)
dose.p(modl,p=c(.5,.9))
data(troutegg)
head(troutegg)
troutegg%>%arrange(location)%>%relocate(location,period,survive,total)
bmod<-glm(cbind(survive,total-survive)~location+period, family=binomial(),troutegg)
bmod
pchisq(64.5,12, lower=FALSE)
library(ggResidpanel)
resid_interact(bmod, plots='all')
halfnorm(residuals(bmod))
rbind(troutegg[15,],troutegg[20,])
elogits <-
log((troutegg$survive+0.5)/(troutegg$total-
troutegg$survive+0.5))
with(troutegg,interaction.plot(period,location,elogits)
)
df<-data.frame(elogits=elogits,period=troutegg$period,location=troutegg$location)
ggplot(df,aes(x=period,y=elogits,group=location,color=location))+geom_point()+geom_smooth(se=FALSE, method="loess", span=0.5)+ggtitle('interaction plot')
(sigma2<-sum(residuals(bmod,type='pearson')^2)/12)
drop1(bmod,scale=sigma2,test='F')
drop1(bmod,test='F')
summary(bmod, dispersion=sigma2)
summary(bmod)
elogits <-
log((troutegg$survive+0.5)/(troutegg$total-
troutegg$survive+0.5))
with(troutegg,interaction.plot(period,location,elogits)
)
