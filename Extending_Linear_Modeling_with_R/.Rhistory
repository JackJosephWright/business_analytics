as.data.frame(meanv)
meanv[1]
class(meanv[1])
do.call(rbind,meanv)
#turn list of lists into dataframe
df<-as.data.frame(do.call(rbind,meanv))
df
df<-cbind(dose = rownames(df))
df
df<-cbind(dose = rownames(df),df)
df
#turn list of lists into dataframe
df<-as.data.frame(do.call(rbind,meanv))
df<-cbind(dose = rownames(df),df)
df
rownames(df)<-1:nrow(df)
df
ggplot(df,aes(x=mean,y=variance))+geom_smooth()
pchisq(33.496,12,lower.tail=FALSE)
summary(sal.fit1)
sal.fit1 <- glm(data= salmonella, formula = colonies ~ dose, family = poisson(link = "log"))
summary(sal.fit1)
sal.fit1 <- glm(data= salmonella, formula = colonies ~ dose, family = poisson)
summary(sal.fit1)
(link = "log")
(link = "log")
(link = "log")
sal.fit1 <- glm(data= salmonella, formula = colonies ~ dose, family = poisson(link = "log"))
summary(sal.fit1)
sal.fit1 <- glm(data= salmonella, formula = colonies ~ dose, family = poisson)
summary(sal.fit1)
resid_panel(sal.fit1)
plot(sal.fit1,which =1 )
plot(colonies ~ dose, data = salmonella)
lines(x = salmonella$dose, y= predict.glm(sal.fit1, type = "response") )
plot(colonies ~ dose, data = salmonella)
lines(x = salmonella$dose, y= predict.glm(sal.fit1, type = "response") )
sal.fit2 <- glm(colonies ~ poly(dose, 4),data = salmonella, family = poisson(link = "log"))
summary(sal.fit2)
pchisq(34.98,13,lower.tail = FALSE)
plot(sal.fit2,which =1 )
sal.fit3 <- glm(colonies ~ poly(dose, 4),data = salmonella, family = quasipoisson(link = "log"))
summary(sal.fit3)
(dp <-
sum(residuals(sal.fit1,type="pearson")^2)/sal.fit1$df.res)
(dp <-
sum(residuals(sal.fit2,type="pearson")^2)/sal.fit1$df.res)
summary(sal.fit2,dispersion=dp)
library(MASS)
ships<-MASS::ships
View(ships)
View(ships)
ships<-relocate(ships, incidents)
ggpairs(ships)
#check power transform
powerTransform(ships)
glm_list=list()
glm_list[['poisson']]<-glm(
service~.,family = poisson,data=ships
)
glm_list[['quasipoisson']]<-glm(
service~.,family=quasipoisson(),data=ships
)
glm_list[['neg_binomial']]<-glm.nb(
service~.,ships
)
lapply(glm_list,
function(x)anova(
object=x,
test='Chisq'
))
glm_list=list()
glm_list[['poisson']]<-glm(
incidents~.,family = poisson,data=ships
)
glm_list[['quasipoisson']]<-glm(
incidents~.,family=quasipoisson(),data=ships
)
glm_list[['neg_binomial']]<-glm.nb(
incidents~.,ships
)
lapply(glm_list,
function(x)anova(
object=x,
test='Chisq'
))
lapply(
glm_list,
FUN=AIC
)
summary(glm_list['neg_binomial'])
summary(glm_list[['neg_binomial']])
resi_panel(glm_list[['neg_binomial']])
resid_panel(glm_list[['neg_binomial']])
resid_panel(glm_list[['neg_binomial']])
install.packages('pglm')
df<-glm_list[['neg_binomial']]
modnb<-glm_list[['neg_binomial']]
modnb$fitted.values
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()+geom_abline(slope=1,intercept=0)
rdev=1-45/107
rdev
summary(ships)
ships<-ships%>%filter(service>0)
summary(ships)
modr<-glm(data=ships, incidents/service~type+year+period, family=poisson)
lmod<-lm(data=ships, incidents/service~type+year+period)
resid_panel(lmod)
glm_list=list()
glm_list[['All']]<-glm(
incidents~type+year+period,offest=log(service),family = poisson,data=ships
)
ships<-ships%>%filter(service>0)
View(ships)
glm_list=list()
glm_list[['All']]<-glm(
incidents~type+year+period,offset = log(service),family = poisson,data=ships
)
glm_list[['quasi']]<-glm(
ncidents~type+year+period,offset=log(service),family=quasipoisson(),data=ships
)
glm_list=list()
glm_list[['All']]<-glm(
incidents~type+year+period,offset = log(service),family = poisson,data=ships
)
glm_list[['quasi']]<-glm(
incidents~type+year+period,offset=log(service),family=quasipoisson(),data=ships
)
#negative binomial if we infer that the possible range of accidents is infinite
glm_list[['nb']]<-glm.nb(
incidents~.,ships
)
lapply(glm_list,
function(x)anova(
object=x,
test='Chisq'
))
lapply(
glm_list,
FUN=AIC
)
summary(glm_list[['All']])
modnb<-glm_list[['All']]
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()+geom_abline(slope=1,intercept=0)
modnb<-glm_list[['quasi']]
modnb<-glm_list[['quasi']]
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()+geom_abline(slope=1,intercept=0)
modnb<-glm_list[['nb']]
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()+geom_abline(slope=1,intercept=0)
modnb<-glm_list[['All']]
ggplot(ships,aes(x=incidents,y=modnb$fitted.values))+geom_point()+geom_abline(slope=1,intercept=0)
summary(glm_list[['quasi']])
summary(glm_list[['All']])
summary(glm_list[['quasi']])
summary(glm_list[['All']],dispersion=2.43)
anova(glm_list[['quasi']],test='F')
ships2<-ships
glm1 <- glm(incidents ~ type + year + period,
family = poisson(link = "log"), data = ships2, offset = log(service))
summary(glm1)
par(mfrow=c(2,2))
plot(glm1)
resid_panel(glm1)
glm2 <- update(glm1, family = quasipoisson(link = "log"))
summary(glm2)
resid_panel(glm2)
ships2<-ships
glm1 <- glm(incidents ~ type + year + period,
family = poisson(link = "log"), data = ships2, offset = log(service))
summary(glm1)
par(mfrow=c(2,2))
resid_panel(glm1)
anova(glm2, test = "F")
# check if damage is roughly proportional to service
glm3 <- glm(formula = incidents ~ type + year + period + log(service),
family = quasipoisson(link = "log"), data = ships2)
summary(glm3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
night_owlish <- "https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme"
rstudioapi::addTheme(night_owlish, apply = TRUE)
africa<-data(africa)
summary(africa)
africa<-data(africa)
summary(africa)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
africa<-data(africa)
summary(africa)
data(africa)
summary(africa)
af_na<-africa%>%mutate(is_na=case_when(is.na(pollib)))
af_na<-africa%>%case_when(is.na(pollib))
af_na<-africa%>%case_when(is.na(pctvote))
af_na<-africa%>%case_when(is.na(pctvote),~TRUE)
africa
is.na(africa$pollib)
africa%>%mutate(
has_na = case_when(is.na(pollib)|is.na(pctvote)~TRUE,
TRUE~FALSE
)
)
af_na<-africa%>%mutate(
has_na = case_when(is.na(pollib)|is.na(pctvote)~TRUE,
TRUE~FALSE
)
)
ggpairs(af_na,mapping=has_na)
ggpairs(af_na,aes(colour = has_na, alpha = 0.4)))
ggpairs(af_na,aes(colour = has_na, alpha = 0.4))
ggpairs(af_na,aes(colour = has_na, alpha = 0.4))
africa<-na.omit(africa)
glm_list=list()
glm_list[['All']]<-glm(data=africa,militcoup~.,family=poisson())
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.family=quasipoisson())
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~.)
lapply(glm_list,
FUN=summary
)
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~oligarchy+pollib+parties)
lapply(glm_list,
FUN=summary
)
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~.)
glm_list[['Selected']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=poisson())
glm_list[['Quasi_selected']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=quasipoisson())
glm_list[['nb_selected']]<-glm.nb(data=africa,miltcoup~oligarchy+pollib+parties)
lapply(
X=list_glm,
FUN = AIC
)
lapply(
X=glm_list,
FUN = AIC
)
View(africa)
drop1(glm_list[['All']])
drop1(glm_list[['All']],test='F')
resid_panel(glm_list[['Selected']])
ggpairs(africa%>%select(oligarchy,pollib,parties))
ggpairs(africa%>%select(c(oligarchy,pollib,parties)))
africa%>%select(c(oligarchy,pollib,parties)
africa%>%select(c(oligarchy,pollib,parties))
africa%>%select(c(oligarchy,pollib,parties))
africa
africa%>%select(oligarchy)
data(africa)
summary(africa)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
View(africa)
View(af_na)
View(africa)
View(af_na)
africa%>%select(oligarchy)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
data(africa)
summary(africa)
starwars %>%
select(name:mass, gender, species) %>%
mutate(
type = case_when(
height > 200 | mass > 200 ~ "large",
species == "Droid"        ~ "robot",
TRUE                      ~ "other"
)
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
data(africa)
summary(africa)
af_na<-africa%>%mutate(
has_na = case_when(is.na(pollib)|is.na(pctvote)~TRUE,
TRUE~FALSE
)
)
ggpairs(af_na,aes(colour = has_na, alpha = 0.4))
africa<-na.omit(africa)
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~.)
lapply(glm_list,
FUN=summary
)
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~.)
glm_list[['Selected']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=poisson())
glm_list[['Quasi_selected']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=quasipoisson())
glm_list[['nb_selected']]<-glm.nb(data=africa,miltcoup~oligarchy+pollib+parties)
lapply(
X=glm_list,
FUN = AIC
)
drop1(glm_list[['All']],test='F')
resid_panel(glm_list[['Selected']])
ggpairs())
africa%>%select(c(oligarchy,pollib,parties))
africa%>%select(oligarchy)
df<-africa
df%>%select(oligarchy)
df%>%select(-oligarchy)
df%>%dplyr::select(-oligarchy)
ggpairs(dplyr::select(c(oligarchy,pollib,parties)))
ggpairs(africa%>%dplyr::select(c(oligarchy,pollib,parties)))
ggpairs(africa%>%dplyr::select(c(miltcoup,oligarchy,pollib,parties)))
resid_panel(glm_list[['Selected']],plots='all')
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,2),family=poisson())
summary(glm_final)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,4),family=poisson())
summary(glm_final)
resid_panel(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$fitted.values))+geom_point()
resid_panel(glm_final)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson())
summary(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$fitted.values))+geom_point()
resid_panel(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$fitted.values))+geom_point()+geom_abline(slope=1,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=quasipoisson())
summary(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$fitted.values))+geom_point()+geom_abline(slope=1,intercept = 0)
resid_panel(glm_final)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson)
summary(glm_final)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
data(africa)
summary(africa)
af_na<-africa%>%mutate(
has_na = case_when(is.na(pollib)|is.na(pctvote)~TRUE,
TRUE~FALSE
)
)
ggpairs(af_na,aes(colour = has_na, alpha = 0.4))
africa<-na.omit(africa)
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~.)
lapply(glm_list,
FUN=summary
)
glm_list=list()
glm_list[['All']]<-glm(data=africa,miltcoup~.,family=poisson())
glm_list[['Quasi']]<-glm(data=africa,miltcoup~.,family=quasipoisson())
glm_list[['nb']]<-glm.nb(data=africa,miltcoup~.)
glm_list[['Selected']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=poisson())
glm_list[['Quasi_selected']]<-glm(data=africa,miltcoup~oligarchy+pollib+parties,family=quasipoisson())
glm_list[['nb_selected']]<-glm.nb(data=africa,miltcoup~oligarchy+pollib+parties)
lapply(
X=glm_list,
FUN = AIC
)
drop1(glm_list[['All']],test='F')
resid_panel(glm_list[['Selected']],plots='all')
ggpairs(africa%>%dplyr::select(c(miltcoup,oligarchy,pollib,parties)))
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$fitted.values))+geom_point()+geom_abline(slope=1,intercept = 0)
resid_panel(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$fitted.values))+geom_point()+geom_abline(slope=1,intercept = 0)
ggplot(africa,aes(x=miltcoup,y=glm_final$residuals))+geom_point()+geom_abline(slope=1,intercept = 0)
ggplot(africa,aes(x=miltcoup,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,4),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,1),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=miltcoup,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,2),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~log(poly(oligarchy,3)),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
ggplot(africa,aes(x=sqrt(glm_final$fitted.values),y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
ggplot(africa,aes(x=glm_final$fitted.values,y=sqrt(glm_final$residuals)))+geom_point()+geom_abline(slope=0,intercept = 0)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals^2))+geom_point()+geom_abline(slope=0,intercept = 0)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3)),family=quasipoisson()
summary(glm_final)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3)),family=quasipoisson())
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=quasipoisson())
summary(glm_final)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson)
summary(glm_final)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,1),family=poisson)
summary(glm_final)
ggplot(africa,aes(x=glm_final$fitted.values,y=glm_final$residuals))+geom_point()+geom_abline(slope=0,intercept = 0)
glm_final<-glm(data=africa,miltcoup~poly(oligarchy,3),family=poisson)
summary(glm_final)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
data("dvisits")
view(dvisits)
View(dvisits)
mod1<-glm(data=dvisits, doctorco~sex+ age+
agesq+ income+ levyplus+ freepoor+ freerepa+ illness+ actdays+ hscore+ chcond1+chond2, family=poisson)
mod1<-glm(data=dvisits, doctorco~sex+ age+
agesq+ income+ levyplus+ freepoor+ freerepa+ illness+ actdays+ hscore+ chcond1+chcond2, family=poisson)
summary(mod1)
pchisq(4379.5,5117,lower.tail = FALSE)
pchisq(5634.8-4379
5,5189-5177,lower.tail = FALSE)
pchisq(5634.8-4379.5,5189-5177,lower.tail = FALSE)
resid_panel(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+
agesq+ income+ levyplus+ freepoor+ freerepa+ illness+ actdays+ hscore+ chcond1+chcond2, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ income+ levyplus+ freepoor+ freerepa+ illness+ actdays+ hscore+ chcond1+chcond2, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ income+ levyplus+ freepoor+ illness+ actdays+ hscore+ chcond1+chcond2, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ income+ freepoor+ illness+ actdays+ hscore+ chcond1+chcond2, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ income+ freepoor+ illness+ actdays+ hscore+chcond2, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ income+ freepoor+ illness+ actdays+ hscore, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ freepoor+ illness+ actdays+ hscore, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ illness+ actdays+ hscore, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~sex+ age+ illness+ actdays, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~ age+ illness+ actdays, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~  illness+ actdays, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~  illness+ actdays, family=poisson)
summary(mod1)
resid_panel(mod1)
mod1<-glm(data=dvisits, doctorco~  illness+ actdays, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~  illness, family=poisson)
summary(mod1)
mod1<-glm(data=dvisits, doctorco~  illness+ actdays, family=poisson)
summary(mod1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
library(ggResidpanel)
library(GGally)
library(faraway)
data("dvisits")
mod1<-glm(data=dvisits, doctorco~sex+ age+
agesq+ income+ levyplus+ freepoor+ freerepa+ illness+ actdays+ hscore+ chcond1+chcond2, family=poisson)
summary(mod1)
pchisq(5634.8-4379.5,5189-5177,lower.tail = FALSE)
resid_panel(mod1)
mod_back<-glm(data=dvisits, doctorco~  illness+ actdays, family=poisson)
summary(mod_back)
drop1(mod1)
drop1(mod1,test='F')
step(mod1,direction = 'backward')
