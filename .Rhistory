#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO>726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OPS, data=df)
summary(lm1)
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
#df<-df%>%filter(TEAM_BATTING_SO>726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OPS, data=df)
summary(lm1)
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OPS, data=df)
summary(lm1)
View(df)
raw<-select(-TEAM_BASERUN_CS)
View(raw)
raw<-select(-TEAM_BATTING_HBP)
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-select(-TEAM_BATTING_HBP)
raw<-raw%>%select(-TEAM_BATTING_HBP)
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
#df<-df%>%filter(TEAM_BATTING_SO>726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OPS, data=df)
summary(lm1)
#IMPORT
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-raw%>%select(-TEAM_BATTING_HBP)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO>726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OPS, data=df)
summary(lm1)
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO<726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OPS, data=df)
summary(lm1)
plot(lm1$residuals)
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO<726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_BATTING_OPS, data=df)
summary(lm1)
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO>726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
#df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
#df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_OPS+TEAM_BATTING_OPS, data=df)
summary(lm1)
control<-rfeControl(functions = rfFuncs,method = 'cv', number=10)
rfe.train<-rfe(df[,-1],df[,1],sizes = 1:12,rfeControl = control)
rfe.train
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_SO,EAM_BATTING_SO,TEAM_BATTING_OBP,TEAM_BATTING_NO_OUT, data=df)
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_SO,TEAM_BATTING_SO,TEAM_BATTING_OBP,TEAM_BATTING_NO_OUT, data=df)
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_SO,TEAM_BATTING_SO,TEAM_BATTING_OBP,TEAM_BATTING_NO_OUT, data=df)
View(df)
colnames(df)
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_PITCHING_SO+TEAM_BATTING_SO+TEAM_BATTING_OBP+TEAM_BATTING_NO_OUT, data=df)
summary(lm1)
View(df)
pairs.panels(z_df[c(1:10)],
method = 'pearson')
pairs.panels(df[c(1:10)],
method = 'pearson')
corr(df)
cor(df)
lm1<-lm(TARGET_WINS~TEAM_PITCHING_NO_OUT, data=df)
summary(lm1)
c<-cor(df)
View(c)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP, data=df)
summary(lm1)
View(c)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OPS, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP, data=df)
summary(lm1)
c[TEAM_BATTING_OBP]
c[2,]
c[6,]
min(c[6,])
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB+TEAM_FIELDING_E, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB+TEAM_FIELDING_E+TEAM_PITCHING_SO, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB+TEAM_FIELDING_E+TEAM_PITCHING_SO+TEAM_BATTING_3B, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BASERUN_SB+TEAM_FIELDING_E+TEAM_PITCHING_SO+TEAM_BATTING_3B, data=df)
summary(lm1)
TEAM_BATTING_OBP+
TEAM_BATTING_OBP+
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB+TEAM_FIELDING_E+TEAM_PITCHING_SO+TEAM_BATTING_3B, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB+TEAM_FIELDING_E+TEAM_PITCHING_SO+TEAM_BATTING_3B, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OBP+TEAM_BASERUN_SB+TEAM_FIELDING_E+TEAM_PITCHING_SO+TEAM_BATTING_3B+TEAM_BASERUN_CS, data=df)
summary(lm1)
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-raw%>%select(-TEAM_BATTING_HBP)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO<726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
library(randomForest)
control<-rfeControl(functions = rfFuncs,method = 'cv', number=10)
rfe.train<-rfe(df[,-1],df[,1],sizes = 1:12,rfeControl = control)
rfe.train
library(randomForest)
control<-rfeControl(functions = rfFuncs,method = 'cv', number=10)
rfe.train<-rfe(df[,-1],df[,1],sizes = 1:12,rfeControl = control)
df<-df%>%na.omit()
#jacks try
#LIBRARIES
library(tidyverse)
library(GGally)
library(psych)
library(stats)
#RANDOM SEED
set.seed(210904)
#IMPORT
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-raw%>%select(-TEAM_BATTING_HBP)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO<726)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
View(df)
summary(df)
df<-df%>%select(-TEAM_BASERUN_CS,-TEAM_BASERUN_SB)
df<-df%>%na.omit()
control<-rfeControl(functions = rfFuncs,method = 'cv', number=10)
rfe.train<-rfe(df[,-1],df[,1],sizes = 1:12,rfeControl = control)
rfe.train
View(df)
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_BATTING_3B+TEAM_FIELDING_DP+TEAM_BATTING_OPS+TEAM_BATTING_TOTAL_BASES, data=df)
summary(lm1)
df<-df%>%filter(TEAM_BATTING_SO<500)
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO<500)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%select(-TEAM_BASERUN_CS,-TEAM_BASERUN_SB)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_BATTING_3B+TEAM_FIELDING_DP+TEAM_BATTING_OPS+TEAM_BATTING_TOTAL_BASES, data=df)
summary(lm1)
pairs.panels(df[c(1:10)],
method = 'pearson')
#RANDOM SEED
set.seed(210904)
#IMPORT
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-raw%>%select(-TEAM_BATTING_HBP)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%filter(TEAM_BATTING_SO<800)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%select(-TEAM_BASERUN_CS,-TEAM_BASERUN_SB)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
pairs.panels(df[c(1:10)],
method = 'pearson')
lm1<-lm(TARGET_WINS~TEAM_FIELDING_E+TEAM_BATTING_3B+TEAM_FIELDING_DP+TEAM_BATTING_OPS+TEAM_BATTING_TOTAL_BASES, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OPS+TEAM_PITCHING_OPS, data=df)
summary(lm1)
cor(df)
c<-cor(df)
c[2,]
lm1<-lm(TARGET_WINS~TEAM_BATTING_OPS+TEAM_PITCHING_OPS+TEAM_PITCHING_SO, data=df)
summary(lm1)
lm1<-lm(TARGET_WINS~TEAM_BATTING_OPS+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_FIELDING_E, data=df)
summary(lm1)
set.seed(210904)
#IMPORT
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-raw%>%select(-TEAM_BATTING_HBP)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
#df<-df%>%filter(TEAM_BATTING_SO<800)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%select(-TEAM_BASERUN_CS,-TEAM_BASERUN_SB)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
#ggplot(df,aes(x=NET_HR,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=TEAM_BATTING_OPS,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
#ggplot(df, aes(x=x,y=TARGET_WINS))+geom_point()+geom_smooth(method='lm')
df<-df%>%na.omit()
lm1<-lm(TARGET_WINS~TEAM_BATTING_OPS+TEAM_PITCHING_OPS+TEAM_PITCHING_SO+TEAM_FIELDING_E, data=df)
summary(lm1)
plot(lm1$residuals)
#jacks try
#LIBRARIES
library(tidyverse)
library(GGally)
library(psych)
library(stats)
#RANDOM SEED
set.seed(210904)
#IMPORT
setwd('C:/Program Files/GitHub/business_analytics')
raw <- read.csv("./data/moneyball-training-data.csv")%>%select(-INDEX)
raw<-raw%>%select(-TEAM_BATTING_HBP)
#split data
df<-raw%>%mutate(TEAM_BATTING_AB=162*27+TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_NO_OUT=TEAM_BATTING_H+TEAM_BATTING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_OBP=TEAM_BATTING_NO_OUT/TEAM_BATTING_AB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_1B=TEAM_BATTING_H-TEAM_BATTING_2B-TEAM_BATTING_3B-TEAM_BATTING_HR,.after=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_TOTAL_BASES=TEAM_BATTING_1B+2*TEAM_BATTING_2B+3*TEAM_BATTING_3B+4*TEAM_BATTING_HR,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_BATTING_SLG=TEAM_BATTING_TOTAL_BASES/TEAM_BATTING_AB,.after=TEAM_BATTING_OBP)
df<-df%>%mutate(TEAM_BATTING_OPS = TEAM_BATTING_OBP+TEAM_BATTING_SLG,.after=TARGET_WINS)
df<-df%>%select(-TEAM_BASERUN_CS,-TEAM_BASERUN_SB)
df<-df%>%mutate(TEAM_PITCHING_AB=162*27+TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_NO_OUT=TEAM_PITCHING_H+TEAM_PITCHING_BB,.before=TEAM_BATTING_H)
df<-df%>%mutate(TEAM_PITCHING_OBP=TEAM_PITCHING_NO_OUT/TEAM_PITCHING_AB, .before=TEAM_PITCHING_AB)
#df<-df%>%mutate(TEAM_PITCHING_1B=TEAM_PITCHING_H-TEAM_PITCHING_2B-TEAM_PITCHING_3B-TEAM_PITCHING_HR,.after=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_TOTAL_BASES=(TEAM_PITCHING_H-TEAM_PITCHING_HR)+TEAM_PITCHING_BB+TEAM_FIELDING_E+4*TEAM_PITCHING_HR,.before=TEAM_PITCHING_H)
df<-df%>%mutate(TEAM_PITCHING_SLG=TEAM_PITCHING_TOTAL_BASES/TEAM_PITCHING_AB,.after=TEAM_PITCHING_OBP)
df<-df%>%mutate(TEAM_PITCHING_OPS = TEAM_PITCHING_OBP+TEAM_PITCHING_SLG,.after=TEAM_BATTING_OPS)
#overall stats
df<-df%>%mutate(OPS_DIF=TEAM_BATTING_OPS-TEAM_PITCHING_OPS,.after=TARGET_WINS)
df<-df%>%mutate(NET_HR=TEAM_BATTING_HR-TEAM_PITCHING_HR)
df<-df%>%
mutate(SO_factor= case_when(
TEAM_BATTING_SO<726 ~'low',
TEAM_BATTING_SO>726 ~'high'
))
pairs(df[,1:10],col=[df$SO_factor])
pairs(df[,1:10],col=df$SO_factor)
pairs(df[,1:10],col=my_cols[df$SO_factor])
my_cols <- c("#00AFBB", "#E7B800")
pairs(df[,1:10],col=my_cols[df$SO_factor])
pairs(df[,1:10], pch = 19,  cex = 0.5,col=my_cols[df$SO_factor])
pairs(df[,1:10], pch = 19)
pairs(df[,1:5], pch = 19)
pairs(df[,1:5], pch = 10)
pairs(df[,1:5], pch = 10, lower.panel = NULL)
pairs(df[,1:5], pch = 10,cex=.5, lower.panel = NULL)
pairs(df[,1:5], pch = 10,cex=.5,col = my_cols[df$SO_factor], lower.panel = NULL)
my_cols <- c("red", "blue")
pairs(df[,1:5], pch = 10,cex=.5,col = my_cols[df$SO_factor], lower.panel = NULL)
my_cols <- c("#00AFBB", "#E7B800", "#FC4E07")
pairs(iris[,1:4], pch = 19,  cex = 0.5,
col = my_cols[iris$Species],
lower.panel=NULL)
my_cols <- c("#00AFBB", "#E7B800", "#FC4E07")
pairs(iris[,1:4], pch = 199,  cex = 0.5,
col = my_cols[iris$Species],
lower.panel=NULL)
my_cols <- c("#00AFBB", "#E7B800", "#FC4E07")
pairs(iris[,1:4], pch = 1,  cex = 0.5,
col = my_cols[iris$Species],
lower.panel=NULL)
my_cols <- c("red", "blue", "green")
pairs(iris[,1:4], pch = 1,  cex = 0.5,
col = my_cols[iris$Species],
lower.panel=NULL)
pairs(df[,1:5], pch = 10,cex=.5,col = my_cols[df$SO_factor], lower.panel = NULL)
pairs(df[,1:5], pch = 100,cex=.5,col = my_cols[df$SO_factor], lower.panel = NULL)
pairs(df[,1:5], pch = 100,cex=1,col = my_cols[df$SO_factor], lower.panel = NULL)
ggpairs(df,aes(color=SO_factor, alpha=.4))
library(GGally)
ggpairs(df,aes(color=SO_factor, alpha=.4))
ggpairs(df[1:5],aes(color=SO_factor, alpha=.4))
ggpairs(df[1:5,29],aes(color=SO_factor, alpha=.4))
temp<-df%>%select(1:10)
#jacks try
#LIBRARIES
library(tidyverse)
library(GGally)
library(psych)
library(stats)
temp<-df%>%select(1:10)
temp<-df%>%select(c[1:10],29)
temp<-df%>%select([1:10])
temp<-df%>%select(1:10)
temp<-df%>%select(1:10,SO_factor)
View(rfe.train)
View(temp)
library(GGally)
ggpairs(temp,aes(color=SO_factor, alpha=.4))
View(df)
temp<-df%>%select(TARGET_WINS,TEAM_BATTING_OPS,TEAM_BATTING_OBP,TEAM_PITCHING_OBP,TEAM_BATTING_HR,TEAM_BATTING_3B,SO_factor)
library(GGally)
ggpairs(temp,aes(color=SO_factor, alpha=.4))
temp<-df%>%select(TARGET_WINS,TEAM_BATTING_OBP,TEAM_PITCHING_OBP,TEAM_BATTING_HR,TEAM_BATTING_3B,SO_factor)
library(GGally)
ggpairs(temp,aes(color=SO_factor, alpha=.4))
temp<-df%>%select(TARGET_WINS,TEAM_BATTING_OBP,TEAM_PITCHING_OBP,TEAM_PITCHING_SO,TEAM_BATTING_HR,TEAM_BATTING_3B,SO_factor)
library(GGally)
ggpairs(temp,aes(color=SO_factor, alpha=.4))
temp<-df%>%select(TARGET_WINS,TEAM_BATTING_OBP,TEAM_PITCHING_OBP,log(TEAM_PITCHING_SO),TEAM_BATTING_HR,TEAM_BATTING_3B,SO_factor)
temp<-df%>%select(TARGET_WINS,TEAM_BATTING_OBP,TEAM_PITCHING_OBP,log(TEAM_PITCHING_SO),TEAM_BATTING_HR,TEAM_BATTING_3B,SO_factor)
temp<-df%>%select(TARGET_WINS,TEAM_BATTING_OBP,TEAM_PITCHING_OBP,TEAM_PITCHING_SO,TEAM_BATTING_HR,TEAM_BATTING_3B,SO_factor)
temp<-temp%>%mutate(TEAM_PITCHING_SO=log(TEAM_PITCHING_SO))
ggpairs(temp,aes(color=SO_factor, alpha=.4))
