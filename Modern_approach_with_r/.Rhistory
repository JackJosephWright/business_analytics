theta<-round(yFood,3)
odds<-round(yFood/(1-yFood),3)
cbind(x,theta,odds)
y = c(1,1,1,0,0,0)
a <- factor(1:length(y))
fit <- glm(y~a,family=binomial)
summary(fit)
resid_panel(fit)
yY=predict(fit, x=a, type = 'response')
ggplot(as.data.frame(cbind(y,a)), aes(x=a, y=y))+geom_point()+geom_smooth(aes(x=a,y=yY))
summary(glm.model)
pchisq(11.368,df=12, lower.tail = FALSE)
pchisq(50.059,df=1,lower.tail = FALSE)
anova(glm.model,update(glm.model,~1),test='Chisq')
(R_dev=1-11.368/61.427)
library(here)
file<-here('data','MichelinNy.csv')
df<-read.csv(file, header=TRUE)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)
ggplot(df,aes(x=as.factor(InMichelin),y=Food))+geom_boxplot()
summary(glm.model<-glm(formula=InMichelin~Food, family=binomial(),data=df))
file<-here('data','MichelinFood.txt')
df_1=read.table(file,header = TRUE)
glm.model_crosstab<-glm(formula=cbind(df_1$InMichelin,df_1$NotInMichelin)~Food,family=binomial, data=df_1)
summary(glm.model_crosstab)
anova(glm.model,update(glm.model,~1),test='Chisq')
library(ggpubr)
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(b,a)
#example
P_Y_1_x=.6
P_Y_0_x=.4
(theta_x=P_Y_1_x*1+P_Y_0_x*0)
(odds_x=P_Y_1_x/P_Y_0_x)
P_Y_1=mean(df$InMichelin==1)
P_Y_0=1-P_Y_1
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
summary(glm.M_1<-glm(InMichelin~Food, family=binomial(),data=df))
beta_0<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
x_1<-df$Food
plot(1/exp(-(beta_0+beta_1*x)))
base<-ggplot(df,aes(x=Food,y=InMichelin))+xlim(15,28)+geom_point()
f<-function(x) (1/(1+exp(-(beta_0+beta_1*x))))
p1<-base+geom_function(fun=f)
library(car)
summary(glm.full<-glm(InMichelin~(Food+Decor+Service+Price),family=binomial(),data=df))
ypredict<-predict(glm.full,type = 'response')
ggplot(df,aes(x=Food,y=ypredict))+geom_point()+geom_smooth(method='loess')+geom_function(fun=f,color='red')
mmps(glm.full)
m <- update(bigmodel, ~. - Age:Start - Number:Start -
glm.full<-update(glm.full,~.+log(Price))
#rerun marginal models
mmps(glm.full_2)
library(here)
file<-here('data','MichelinNy.csv')
df<-read.csv(file, header=TRUE)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)
ggplot(df,aes(x=as.factor(InMichelin),y=Food))+geom_boxplot()
summary(glm.model<-glm(formula=InMichelin~Food, family=binomial(),data=df))
file<-here('data','MichelinFood.txt')
df_1=read.table(file,header = TRUE)
glm.model_crosstab<-glm(formula=cbind(df_1$InMichelin,df_1$NotInMichelin)~Food,family=binomial, data=df_1)
summary(glm.model_crosstab)
anova(glm.model,update(glm.model,~1),test='Chisq')
library(ggpubr)
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(b,a)
#example
P_Y_1_x=.6
P_Y_0_x=.4
(theta_x=P_Y_1_x*1+P_Y_0_x*0)
(odds_x=P_Y_1_x/P_Y_0_x)
P_Y_1=mean(df$InMichelin==1)
P_Y_0=1-P_Y_1
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
summary(glm.M_1<-glm(InMichelin~Food, family=binomial(),data=df))
beta_0<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
x_1<-df$Food
plot(1/exp(-(beta_0+beta_1*x)))
base<-ggplot(df,aes(x=Food,y=InMichelin))+xlim(15,28)+geom_point()
f<-function(x) (1/(1+exp(-(beta_0+beta_1*x))))
p1<-base+geom_function(fun=f)
library(car)
summary(glm.full<-glm(InMichelin~(Food+Decor+Service+Price),family=binomial(),data=df))
ypredict<-predict(glm.full,type = 'response')
ggplot(df,aes(x=Food,y=ypredict))+geom_point()+geom_smooth(method='loess')+geom_function(fun=f,color='red')
mmps(glm.full)
m <- update(bigmodel, ~. - Age:Start - Number:Start -
glm.full<-update(glm.full,~.+log(Price))
#rerun marginal models
mmps(glm.full_2)
summary(glm.full)
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, color=factor(InMichelin)))+geom_point()+geom_smooth(method='lm', se=FALSE)
mmps(m,span=3/4, layout = c(2,2))
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, ))+geom_point()+geom_smooth(method='lm', se=TRUE)
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, ))+geom_point()+geom_smooth(method='loess', se=TRUE)
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, ))+geom_point()+geom_smooth(method='lm', se=TRUE)
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service,color=factor(InMichelin) ))+geom_point()+geom_smooth(method='lm', se=TRUE)
knitr::opts_chunk$set(echo = TRUE)
file<-here('data','cleaningwtd.txt')
library(tidyverse)
library(here)
df<-read.csv(file,header=TRUE)
file<-here('data','cleaningwtd.txt')
df<-read.csv(file,header=TRUE)
View(df)
df<-read.table(file,header=TRUE)
View(df)
(lm(formula=Rooms~Crews,weights=1/StdDev^2),data=df)
(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df)
(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df)
(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df))
(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df))
(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df))
summary(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df))
summary(lm(formula=Rooms~Crews,weights=2/StdDev^2,data=df))
summary(lm(formula=Rooms~Crews,weights=4/StdDev^2,data=df))
summary(lm(formula=Rooms~Crews,weights=100/StdDev^2,data=df))
summary(lm(formula=Rooms~Crews,weights=1/StdDev^2,data=df))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
file<-here('data','confood2.txt')
df<-read.table(file, header=TRUE)
View(df)
library(ggResidpanel)
lm.mod<-lm(log(Sales~log(Price), data=df)
resid_panel(lm.mod)
lm.mod<-lm(log(Sales)~log(Price), data=df)
resid_panel(lm.mod)
resid_panel(lm.mod, plots='all')
?resid_panel
resid_panel(lm.mod, plots='ls')
ggplot(df, aes(x=log(Price),y=log(Sales)))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df, aes(x=log(Price),y=log(Sales), color=promotion))+geom_point()+geom_smooth(method='lm', se=FALSE)
View(df)
ggplot(df, aes(x=log(Price),y=log(Sales), color=Promotion))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df, aes(x=log(Price),y=log(Sales),group=Promotion, color=Promotion))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales),group=Promotion, color=Promotion))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales) color=Promotion))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales), color=Promotion))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()+geom_smooth(method='lm', se=FALSE)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()+geom_smooth(method='lm', se=FALSE)+scale_color_hue(l=40, c=35)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()+geom_smooth(method='lm', se=FALSE)+scale_color_hue(l=40, c=35)
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()+geom_smooth(method='lm', se=FALSE)+scale_color_manual(values=c( "#E69F00", "#56B4E9"))
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()scale_color_manual(values=c( "#E69F00", "#56B4E9"))
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()+scale_color_manual(values=c( "#E69F00", "#56B4E9"))
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point()+ scale_color_brewer(palette="Dark2")
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales),color=Promotion))+geom_point()
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point(aes(color=Promotion))
ggplot(df%>%group_by(Promotion), aes(x=log(Price),y=log(Sales)))+geom_point(aes(color=Promotion)) +
theme(legend.position = "top")
ggplot(df%>%group_by(as.factor(Promotion)), aes(x=log(Price),y=log(Sales)))+geom_point(aes(color=Promotion)) +
theme(legend.position = "top")
ggplot(df%>%group_by(as.factor(Promotion)), aes(x=log(Price),y=log(Sales)))+geom_point(aes(color=as.factor(Promotion))) +
theme(legend.position = "top")
df$Promotion<-as.factor(df$Promotion)
View(df)
ggplot(df, aes(x=Week,y=log(Sales), color=Promotion))_geom_point()+geom_smooth()
ggplot(df, aes(x=Week,y=log(Sales), color=Promotion))+geom_point()+geom_smooth()
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point()+geom_smooth()
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point()+geom_smooth(method='loess')
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point()+geom_line()
ggplot(df, aes(x=Week,y=log(Sales), color=Promotion))+geom_point()+geom_line()
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point()+geom_line()
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point(shape=Promotion)+geom_line()
View(df)
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point(aes(shape=Promotion))+geom_line()
ggplot(df, aes(x=Week,y=log(Sales)))+geom_point(aes(shape=Promotion, color=Promotion))+geom_line()
library(ggpubr)
a<-ggplot(df, aes(x=Week,y=log(Sales)))+geom_point(aes(shape=Promotion, color=Promotion))+geom_line()
Sales<-df$Sales
Sales_t_1<-Sales[2:]
Sales<-as.list(df$Sales)
Sales_t_1<-Sales[2:]
View(Sales)
Sales_t_1<-Sales[[2:]]
Sales_t_1<-Sales[2]
Sales[2]
Sales[1]
Sales[1:]
Sales_t_1<-tail(Sales,-2)
View(Sales)
View(Sales_t_1)
View(Sales)
View(Sales_t_1)
View(Sales)
View(Sales_t_1)
View(Sales)
View(Sales_t_1)
Sales_t_1<-tail(Sales,-1)
View(Sales_t_1)
View(Sales)
View(Sales_t_1)
Sales<-as.list(df$Sales)[-1]
View(Sales)
Sales_t_1<-tail(as.list(Sales),-1)
View(Sales)
View(Sales_t_1)
View(Sales)
Sales<-as.list(df$Sales)[-1]
Sales_t_1<-tail(as.list(Sales),-1)
View(Sales)
View(Sales_t_1)
View(Sales)
length(df$Sales)
length(Sales)
Sales<-as.list(df$Sales)
Sales_t_1<-tail(as.list(Sales),-1)
View(Sales)
View(Sales_t_1)
View(Sales)
Sales<-as.list(df$Sales)
Sales_t_1<-tail(as.list(Sales),-1)
View(Sales_t_1)
View(Sales)
View(Sales)
View(Sales_t_1)
View(Sales)
View(Sales_t_1)
Sales[1:]
Sales<-as.list(df$Sales.values())
Sales<-as.list(df$Sales.values
Sales<-as.list(df$Sales.values)
Sales<-as.vector(df$Sales)
View(Sales_t_1)
Sales_t_1<-Sales[1:]
Sales_t_1<-Sales[1:3]
View(lm.mod)
Sales
Sales_t_1
Sales_t_1<-Sales[2:length(Sales)]
Sales_t_1
Sales_t_1<-Sales[2:length(as.vector(df$Sales))]
Sales<-as.vector(df$Sales)[-1]
Sales
Sales<-head(as.vector(df$Sales),-1)
Sales
Sales_t_1<-Sales[2:length(as.vector(df$Sales))]
Sales
Sales_t_1
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-Sales[2:length(as.vector(df$Sales))]
df.sales<-as.data.frame(Sales_t_1,Sales)
View(df.sales)
df.sales<-as.data.frame(head(Sales_t_1,-1),head(Sales,-1))
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-Sales[2:length(as.vector(df$Sales))]
length(Sales_t_1)
length(Sales)
Sales_t_1
Sales
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-Sales[2:length(as.vector(df$Sales))]
df$Sales
Sales<-Sales[1:length(as.vector(df$Sales))]
length(Sales)
length(Sales_t_1)
Sales
Sales_t_1
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-df$Sales[1:length(as.vector(df$Sales))]
Sales_t_1
Sa;es
Sales
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-df$Sales[2:length(as.vector(df$Sales))]
Sales_t_1
Sales
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-df$Sales[2:length(as.vector(df$Sales))]
df.sales<-as.data.frame(head(Sales_t_1,-1),head(Sales,-1))
df.sales<-as.data.frame(Sales_t_1,Sales)
Sales
Sales_t_1
df.sales<-as.data.frame(t_1=Sales_t_1,t=Sales)
df.sales<-data.frame(t_1=Sales_t_1,t=Sales)
View(df.sales)
b<-ggplot(df.sales, aes(x=log(t_1),y=log(t)))+geom_point()
ggarrange(a,b)
stats::acf(df$Sales,lag.max=3,plot=TRUE)
stats::acf(df$Sales,lag.max=15,plot=TRUE)
stats::acf(df$Sales,lag.max=17,plot=TRUE)
stats::acf(log(df$Sales),lag.max=17,plot=TRUE)
lm.ignore<-lm(log(Sales)~log(Price)+Promotion, data=df)
resid_panel(lm.ignore)
resid_panel(lm.ignore,plots='all')
acf(lm.ignore$residuals,lag.max=17)
View(lm.ignore)
acf(rstandard(lm.ignore),lag.max=17)
acf(lm.ignore,lag.max=17)
acf(lm.ignore$residuals,lag.max=17)
acf(rstandard(lm.ignore$residuals),lag.max=17)
acf(rstandard(lm.ignore),lag.max=17)
b<-acf(lm.ignore$residuals,lag.max=17)
ggarrange(a,b)
a<-acf(rstandard(lm.ignore),lag.max=17)
b<-acf(lm.ignore$residuals,lag.max=17)
ggarrange(a,b)
a<-acf(rstandard(lm.ignore),lag.max=17, plot=TRUE)
b<-acf(lm.ignore$residuals,lag.max=17, plot=TRUE)
ggarrange(a,b)
a<-acf(rstandard(lm.ignore),lag.max=17, plot=TRUE)
b<-acf(lm.ignore$residuals,lag.max=17, plot=TRUE)
View(a)
summary(lm.ignore)
glm.food<-glm(log(Sales)~log(Price)+Promotion+Week,data=df)
summary(glm.food)
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df)
install.packages('nlme')
install.packages("nlme")
knitr::opts_chunk$set(echo = TRUE)
library(nlme)
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df)
summary(gls.food)
?glm
?g;s
?gls
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df, correlation = corAR1(form = ~1|Week))
summary(gls.food)
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df, correlation = corAR1(form = ~1|Week))
summary(gls.food)
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df, correlation = corAR1(form = ~Week))
summary(gls.food)
gls.food
summary(gls.food)
file<-here('data','confood2.txt')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(ggResidpanel)
file<-here('data','confood2.txt')
df<-read.table(file, header=TRUE)
lm.mod<-lm(log(Sales)~log(Price), data=df)
resid_panel(lm.mod, plots='ls')
ggplot(df%>%group_by(as.factor(Promotion)), aes(x=log(Price),y=log(Sales)))+geom_point(aes(color=as.factor(Promotion))) +
theme(legend.position = "top")
library(ggpubr)
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-df$Sales[2:length(as.vector(df$Sales))]
df.sales<-data.frame(t_1=Sales_t_1,t=Sales)
a<-ggplot(df, aes(x=Week,y=log(Sales)))+geom_point(aes(shape=Promotion, color=Promotion))+geom_line()
b<-ggplot(df.sales, aes(x=log(t_1),y=log(t)))+geom_point()
ggarrange(a,b)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(ggResidpanel)
file<-here('data','confood2.txt')
df<-read.table(file, header=TRUE)
lm.mod<-lm(log(Sales)~log(Price), data=df)
resid_panel(lm.mod, plots='ls')
ggplot(df%>%group_by(as.factor(Promotion)), aes(x=log(Price),y=log(Sales)))+geom_point(aes(color=as.factor(Promotion))) +
theme(legend.position = "top")
library(ggpubr)
Sales_t_1<-head(as.vector(df$Sales),-1)
Sales<-df$Sales[2:length(as.vector(df$Sales))]
df.sales<-data.frame(t_1=Sales_t_1,t=Sales)
a<-ggplot(df, aes(x=Week,y=log(Sales)))+geom_point(aes(shape=Promotion, color=Promotion))+geom_line()
b<-ggplot(df.sales, aes(x=log(t_1),y=log(t)))+geom_point()
stats::acf(log(df$Sales),lag.max=17,plot=TRUE)
lm.ignore<-lm(log(Sales)~log(Price)+Promotion, data=df)
resid_panel(lm.ignore,plots='all')
a<-acf(rstandard(lm.ignore),lag.max=17, plot=TRUE)
b<-acf(lm.ignore$residuals,lag.max=17, plot=TRUE)
library(nlme)
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df, correlation = corAR1(form = ~Week))
summary(gls.food)
nlme::intevals(gls.food)
nlme::intervals(gls.food)
acf(gls.food$residuals)
lm.ignore$df.residual
lm.ignore$residuals
cov(lm.ignore$residuals)
cov(lm.ignore$residuals,lm.ignore$residuals)
vcov(summary(lm.ignore))
vcov(lm.ignore$residuals)
error<-as.vector(lm.ignore$residuals)
error%*%t(error)
error<-as.vector(lm.ignore$residuals)
#get the variance-covariance matrix
var(error)
#get the variance-covariance matrix
cov2cor(error)
#get the residuals as a vector
error<-as.vector(lm.food$residuals)
#get the residuals as a vector
error<-as.vector(gls.food$residuals)
error
t(error)*error
(error)%*%t(error)
#get the variance-covariance matrix
cov2cor(error,error)
#get the variance-covariance matrix
cov2cor(error)
#get the variance-covariance matrix
mean(error)
N<-length(error)
N
one<-rep(1,N)
one
one<-as.vector(rep(1,N))
X<-error
x=X-one%*%t(one)%*%X *(1/N)
one*t(one)
x=X-one*t(one)%*%X *(1/N)
one%*%t(one)
one<-as.vector(rep(1,N))
one_mat<-one%*%t(one)
one_mat_X<-one_mat%*%X
View(one_mat_X)
one_mat_X<-one_mat%*%t(X)
one_mat_X<-one_mat%*%X
one_mat_X<-one_mat%*%X*(1/N)
x=X-one_mat_X
#get variance covariacne matrix by mult this by 1/n
V=t(x)%*%x *(1/N)
#get variance covariacne matrix by mult this by 1/n
V=x%*%t(x) *(1/N)
View(V)
#get cholesky decomposition
S=chol(V)
View(V)
#get cholesky decomposition
S=chol(abs(V))
abs(V)
V<-abs(V)
#get cholesky decomposition
S=chol(V)
#get cholesky decomposition
S=chol(V,multivariate=FALSE)
V<-as.matrix(abs(V))
#get cholesky decomposition
S<-chol(V)
file<-here('data','BayArea.txt')
bay_area<-read.table(file,header=TRUE)
View(bay_area)
ggpairs(bay_area)
library(ggResidpanel)
ggpairs(bay_area)
library(GGally)
ggpairs(bay_area)
ggpairs(bay_area%>%select(c(InterestRate,LoansClosed,VacancyIndex)))
summary(lm.bay_ignore<-lm(InterestRate~LoansClosed+VacancyIndex,data=bay_area))
resid_panel(lm.bay_ignore, plots='all')
acf(lm.bay_ignore)
acf(rstandard(lm.bay_ignore), lag.max = 13,plot = TRUE)
acf(rstandard(lm.bay_ignore), lag.max = 12,plot = TRUE)
acf(rstandard(lm.bay_ignore), lag.max = 12,plot = TRUE,main='Standardized LS residuals')
ar(bay_area)
gls(data=bay_area, InterestRate~LoansClosed+VacancyIndex.correlation = corAR1(form = ~Month) )
gls(data=bay_area, InterestRate~LoansClosed+VacancyIndex,correlation = corAR1(form = ~Month) )
gls.bay<-gls(data=bay_area, InterestRate~LoansClosed+VacancyIndex,correlation = corAR1(form = ~Month) )
summary(gls.bay)
gls.bay<-gls(data=bay_area, InterestRate~LoansClosed+VacancyIndex,correlation = corAR1(form = ~Month) ,method='ML')
summary(gls.bay)
gls.food<-gls(log(Sales)~log(Price)+Promotion+Week,data=df, correlation = corAR1(form = ~Week),method='ML')
summary(gls.food)
nlme::intervals(gls.food)
nmle::intervals(gls.bay)
nlme::intervals(gls.bay)
RESI<-lm.ignore$residuals
lagRESI<-gls.food$residuals
lm.resi<-lm(RESI~lagRESI)
summary(lm.resi)
View(lm.resi)
rho<-lm.resi$coefficients$lagRESI
rho<-lm.resi$coefficients[1]
rho<-lm.resi$coefficients[2]
Y_star<-log(Sales)-rho*lag(log(Sales),1)
X_star<-log(Price)-rho*lag(log(Price),1)
Y_star<-log(df$Sales)-rho*lag(df$log(Sales),1)
Y_star<-log(df$Sales)-rho*lag(log(df$Sales),1)
X_star<-log(df$Price)-rho*lag(log(df$Price),1)
summary(lm(Y_star~X_star))
summary(lm(Y_star~X_star-1))
RESI<-lm.bay_ignore$residuals
lagRESI<-gls.bay$residuals
lm.resi<-lm(RESI~lagRESI)
summary(lm.resi)
rho<-lm.resi$coefficients[2]
Y_star<-bay_area$InterestRate-rho*lag(bay_area$InterestRate,1)
xstarLoansClosed<-bay_area$LoansClosed-rho*bay_area$LoansClosed,1)
xstarLoansClosed<-bay_area$LoansClosed-lag(rho*bay_area$LoansClosed,1)
xstarVacancyIndex<-bay_area$VacancyIndex-lag(rho*bay_area$VacancyIndex,1)
summary(lm(Y_star~xstarLoansClosed+xstarVacancyIndex))
#or
rho<-0.9572093
Y_star<-bay_area$InterestRate-rho*lag(bay_area$InterestRate,1)
xstarLoansClosed<-bay_area$LoansClosed-lag(rho*bay_area$LoansClosed,1)
xstarVacancyIndex<-bay_area$VacancyIndex-lag(rho*bay_area$VacancyIndex,1)
summary(lm(Y_star~xstarLoansClosed+xstarVacancyIndex))
bay_area$LoansClosed
lag(bay_area$LoansClosed,1)
xstarVacancyIndex
summary(lm_auto<-lm(Y_star~xstarLoansClosed+xstarVacancyIndex))
resid_panel(lm_auto)
resid_panel(lm_auto,plots='all')
df_auto<-data.frame(Y_star,xstarLoansClosed,xstarVacancyIndex)
ggpairs(df_auto)
summary(lm_auto<-lm(Y_star~xstarLoansClosed+xstarVacancyIndex-1))
summary(lm_auto<-lm(Y_star~xstarLoansClosed+xstarVacancyIndex))
