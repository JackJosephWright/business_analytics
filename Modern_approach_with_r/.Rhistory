resid_panel(glm.model,plots='all')
range(df$Food)
#create sequence
xFood<-15:28
yFood<-predict(glm.model, list(Food=xFood), type='response')
ggplot(df, aes(x=Food, y=proportion))+geom_point()+geom_smooth(aes(x=xFood,y=yFood))
x<-round(xFood,3)
theta<-round(yFood,3)
odds<-round(yFood/(1-yFood),3)
cbind(x,theta,odds)
y = c(1,1,1,0,0,0)
a <- factor(1:length(y))
fit <- glm(y~a,family=binomial)
summary(fit)
resid_panel(fit)
yY=predict(fit, x=a, type = 'response')
ggplot(as.data.frame(cbind(y,a)), aes(x=a, y=y))+geom_point()+geom_smooth(aes(x=a,y=yY))
summary(glm.model)
pchisq(11.368,df=12, lower.tail = FALSE)
pchisq(50.059,df=1,lower.tail = FALSE)
anova(glm.model,update(glm.model,~1),test='Chisq')
(R_dev=1-11.368/61.427)
library(here)
file<-here('data','MichelinNy.csv')
df<-read.csv(file, header=TRUE)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)
ggplot(df,aes(x=as.factor(InMichelin),y=Food))+geom_boxplot()
summary(glm.model<-glm(formula=InMichelin~Food, family=binomial(),data=df))
file<-here('data','MichelinFood.txt')
df_1=read.table(file,header = TRUE)
glm.model_crosstab<-glm(formula=cbind(df$InMichelin,df$NotInMichelin)~Food,family=binomial, data=df_1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
file<-here('data','MichelinFood.txt')
df<-read.table(file,header = TRUE)
df
df[6,]
ggplot(df, aes(x=Food,y=proportion))+geom_point()
df<-df%>%mutate(logit=log((proportion)/(1-proportion)))
ggplot(df, aes(x=proportion,y=logit))+geom_point()
glm.model<-glm(formula=cbind(InMichelin,NotInMichelin)~Food,family=binomial, data=df)
summary(glm.model)
library(ggResidpanel)
resid_panel(glm.model,plots='all')
range(df$Food)
#create sequence
xFood<-15:28
yFood<-predict(glm.model, list(Food=xFood), type='response')
ggplot(df, aes(x=Food, y=proportion))+geom_point()+geom_smooth(aes(x=xFood,y=yFood))
x<-round(xFood,3)
theta<-round(yFood,3)
odds<-round(yFood/(1-yFood),3)
cbind(x,theta,odds)
y = c(1,1,1,0,0,0)
a <- factor(1:length(y))
fit <- glm(y~a,family=binomial)
summary(fit)
resid_panel(fit)
yY=predict(fit, x=a, type = 'response')
ggplot(as.data.frame(cbind(y,a)), aes(x=a, y=y))+geom_point()+geom_smooth(aes(x=a,y=yY))
summary(glm.model)
pchisq(11.368,df=12, lower.tail = FALSE)
pchisq(50.059,df=1,lower.tail = FALSE)
anova(glm.model,update(glm.model,~1),test='Chisq')
(R_dev=1-11.368/61.427)
library(here)
file<-here('data','MichelinNy.csv')
df<-read.csv(file, header=TRUE)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)
ggplot(df,aes(x=as.factor(InMichelin),y=Food))+geom_boxplot()
summary(glm.model<-glm(formula=InMichelin~Food, family=binomial(),data=df))
file<-here('data','MichelinFood.txt')
df_1=read.table(file,header = TRUE)
glm.model_crosstab<-glm(formula=cbind(df_1$InMichelin,df_1$NotInMichelin)~Food,family=binomial, data=df_1)
summary(glm.model_crosstab)
anova(glm.model,update(glm.model,~1),test='Chisq')
res<-residuals(glm.model,'pearson')
ggplot(aes(x=))
ggplot(aes(x=df$Food,y=res))+geom_point
ggplot(df,aes(x=Food,y=res))+geom_point
ggplot(df,aes(x=Food,y=res))+geom_point()
ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle(Pearson Residuals)
ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('Pearson Residuals')
a<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('Pearson Residuals')
?residuals]
?residuals
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
library(ggarrange)
library(ggpubr)
ggarrange(a,b)
library(ggpubr)
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(a,b)
library(ggpubr)
res_p<-residuals(glm.model_1,'pearson')
library(ggpubr)
res_p<-residuals(glm.model_crosstab,'pearson')
res<-residuals(glm.model_crosstab)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(a,b)
library(ggpubr)
res_p<-residuals(glm.model_crosstab,'pearson')
res<-residuals(glm.model_crosstab)
a<-ggplot(df_1,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df_1,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(a,b)
library(ggpubr)
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(a,b)
library(ggpubr)
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(b,a)
theta_x=P_Y_1_x*1+p_Y_0_x*0
#example
P_Y_1_x=.6
p_Y_0_x=.4
theta_x=P_Y_1_x*1+p_Y_0_x*0
(theta_x=P_Y_1_x*1+p_Y_0_x*0)
odds_x=P_Y_1_x/p_Y_0_x
(odds_x=P_Y_1_x/P_Y_0)
(odds_x=P_Y_1_x/P_Y_0_x)
(theta_x=P_Y_1_x*1+P_Y_0_x*0)
#example
P_Y_1_x=.6
P_Y_0_x=.4
(theta_x=P_Y_1_x*1+P_Y_0_x*0)
(odds_x=P_Y_1_x/P_Y_0_x)
df_y=1<-df%>%filter(InMichelin==1)
df
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(df_y_1,aes(x=Food))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(aes(x=df_y_1$Food))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(Food,color=as.factor(InMichelin))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(aes(Food,color=as.factor(InMichelin))
note that we split out the probability of Y =1,0 and flipped the conditional for the first part
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(aes(Food,color=as.factor(InMichelin))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(aes(Food,color=as.factor(InMichelin)))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(aes(x=Food,y=InMichelin),color=as.factor(InMichelin)))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_histogram(aes(x=Food,y=InMichelin),color=as.factor(InMichelin)))
geom_histogram(df,aes(x=Food,y=InMichelin),color=as.factor(InMichelin)))
geom_histogram(df,aes(x=Food,y=InMichelin),color=as.factor(InMichelin))
geom_histogram(df,aes(x=Food,y=InMichelin),color=as.factor(InMichelin))
head(df)
geom_histogram(df,aes(x=Food,y=InMichelin))
ggplot(df,aes(x=Food,y=InMichelin,color=InMichelin))+geom_histogram()
ggplot(df,aes(x=Food,y=InMichelin,color=InMichelin))+geom_density()
ggplot(df,aes(x=Food,y=InMichelin))+geom_density()
ggplot(df,aes(x=Food,y=InMichelin))+geom_histogram()
ggplot(df,aes(x=Food,y=..density>>))+geom_density()
ggplot(df,aes(x=Food,y=..density..))+geom_density()
ggplot(df,aes(x=Food,y=..density..,color=InMichelin))+geom_density()
ggplot(df,aes(x=Food,y=..density..,color=as.factor(InMichelin)))+geom_density()
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin)))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=InMichelin))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin)))
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
P_Y_1=mean(df$InMichelin==1)
```{r}
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
```
```{r}
ggplot(df,aes(x=Food,y=..density..,color=as.factor(InMichelin)))+geom_density()
```
df$InMichelin==1
mean(df$InMichelin==1)
P_Y_1=df$InMichelin==1
```{r}
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
```
```{r}
ggplot(df,aes(x=Food,y=..density..,color=as.factor(InMichelin)))+geom_density()
```
P_Y_1=df$InMichelin==1
P_Y_1=df$InMichelin==1
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
P_Y_0=1-P_Y_1
P_Y_0
P_Y_1
P_Y_1=mean(df$InMichelin==1)
P_Y_0=1-P_Y_1
P_Y_1
P_Y_0
log(P_Y_1/P_Y_0)
P_Y_1=mean(df$InMichelin==1)
P_Y_0=1-P_Y_1
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
file<-here('data','MichelinFood.txt')
df<-read.table(file,header = TRUE)
df
df[6,]
ggplot(df, aes(x=Food,y=proportion))+geom_point()
df<-df%>%mutate(logit=log((proportion)/(1-proportion)))
ggplot(df, aes(x=proportion,y=logit))+geom_point()
glm.model<-glm(formula=cbind(InMichelin,NotInMichelin)~Food,family=binomial, data=df)
summary(glm.model)
library(ggResidpanel)
resid_panel(glm.model,plots='all')
range(df$Food)
#create sequence
xFood<-15:28
yFood<-predict(glm.model, list(Food=xFood), type='response')
ggplot(df, aes(x=Food, y=proportion))+geom_point()+geom_smooth(aes(x=xFood,y=yFood))
x<-round(xFood,3)
theta<-round(yFood,3)
odds<-round(yFood/(1-yFood),3)
cbind(x,theta,odds)
y = c(1,1,1,0,0,0)
a <- factor(1:length(y))
fit <- glm(y~a,family=binomial)
summary(fit)
resid_panel(fit)
yY=predict(fit, x=a, type = 'response')
ggplot(as.data.frame(cbind(y,a)), aes(x=a, y=y))+geom_point()+geom_smooth(aes(x=a,y=yY))
summary(glm.model)
pchisq(11.368,df=12, lower.tail = FALSE)
pchisq(50.059,df=1,lower.tail = FALSE)
anova(glm.model,update(glm.model,~1),test='Chisq')
(R_dev=1-11.368/61.427)
library(here)
file<-here('data','MichelinNy.csv')
df<-read.csv(file, header=TRUE)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)
ggplot(df,aes(x=as.factor(InMichelin),y=Food))+geom_boxplot()
summary(glm.model<-glm(formula=InMichelin~Food, family=binomial(),data=df))
file<-here('data','MichelinFood.txt')
df_1=read.table(file,header = TRUE)
glm.model_crosstab<-glm(formula=cbind(df_1$InMichelin,df_1$NotInMichelin)~Food,family=binomial, data=df_1)
summary(glm.model_crosstab)
anova(glm.model,update(glm.model,~1),test='Chisq')
library(ggpubr)
res_p<-residuals(glm.model,'pearson')
res<-residuals(glm.model)
a<-ggplot(df,aes(x=Food,y=res_p))+geom_point()+ggtitle('Pearson Residuals')
b<-ggplot(df,aes(x=Food,y=res))+geom_point()+ggtitle('standardized Residuals')
ggarrange(b,a)
#example
P_Y_1_x=.6
P_Y_0_x=.4
(theta_x=P_Y_1_x*1+P_Y_0_x*0)
(odds_x=P_Y_1_x/P_Y_0_x)
P_Y_1=mean(df$InMichelin==1)
P_Y_0=1-P_Y_1
df_y_1<-df%>%filter(InMichelin==1)
ggplot(df, aes(x=Food, y=InMichelin))+geom_jitter(height=.1,width=.1)+geom_density(aes(x=Food,y=..density..,color=as.factor(InMichelin),fill=as.factor(InMichelin),alpha=.5))
glm.M_1<-glm(InMichelin~Food, family=binomial(),data=df)
glm.M$coefficient
glm.M_1<-glm(InMichelin~Food, family=binomial(),data=df)
summary(glm.M_1<-glm(InMichelin~Food, family=binomial(),data=df))
glm.M_1$coefficients
glm.M_1$coefficients[0]
glm.M_1$coefficients[1]
as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
beta_1
beta_0<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
x_1<-df$Food
plot(1/exp(-(beta_0+beta_1_x_1)))
plot(1/exp(-(beta_0+beta_1*x_1)))
df$Food
plot(1/exp(-(beta_0+beta_1*x)))
f<-function(x) 1/(1/exp(-(beta_0+beta_1*x)))
max(df$Food)
min(df$Food)
base<-ggplot()+xlim(15,28)
f<-function(x) 1/(1/exp(-(beta_0+beta_1*x)))
base+geom_function(fun=f)
f<-function(x) (1/exp(-(beta_0+beta_1*x)))
base+geom_function(fun=f)
summary(glm.M_1<-glm(InMichelin~Food, family=binomial(),data=df))
beta_0
beta_1
beta_0<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
x_1<-df$Food
plot(1/exp(-(beta_0+beta_1*x)))
base<-ggplot()+xlim(15,28)
f<-function(x) (1/exp(-(beta_0+beta_1*x)))
base+geom_function(fun=f)
beta_0<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
x_1<-df$Food
plot(1/exp(-(beta_0+beta_1*x)))
base<-ggplot()+xlim(15,28)
f<-function(x) (1/(1+exp(-(beta_0+beta_1*x))))
base+geom_function(fun=f)
base+geom_function(fun=f)+geom_point(aes(x=Food,y=InMichelin))
base+geom_function(fun=f)+geom_point(df,aes(x=Food,y=InMichelin))
beta_0<-as.numeric(glm.M_1$coefficients[1])
beta_1<-as.numeric(glm.M_1$coefficients[2])
x_1<-df$Food
plot(1/exp(-(beta_0+beta_1*x)))
base<-ggplot(df,aes(x=Food,y=InMichelin))+xlim(15,28)+geom_point()
f<-function(x) (1/(1+exp(-(beta_0+beta_1*x))))
base+geom_function(fun=f)
p1<-base+geom_function(fun=f)
ypred<-predict(glm.M_1,list(Food=df$Food, type='response')
ggplot(aes(x=df$Food,y=ypred))+geom_point()
ypred<-predict(glm.M_1,list(Food=df$Food), type='response')
ggplot(aes(x=df$Food,y=ypred))+geom_point()
ypred
len(df$Food)
length(df$Food)
ggplot(df,aes(x=Food,y=ypred))+geom_point()
ypred<-predict(glm.M_1,list(Food=df$Food), type='response')
df_x1<-df%>%mutate(Food=ypred)
View(df_x1)
knitr::opts_chunk$set(echo = TRUE)
kyp <- read.table(url("http://www.stat.umn.edu/~sandy/courses/5421/data/kyphosis.txt"), header = TRUE)
library(tidyverse)
library(ggplot)
library(tidyverse)
library(ggpairs)
library(GGally)
kyp <- read.table(url("http://www.stat.umn.edu/~sandy/courses/5421/data/kyphosis.txt"), header = TRUE)
ggpairs(kyp)
ggpairs(kyp%>%select(-Outcome))
Anova(bigmodel<-glm(Outcome~(Age+Number+Start)^2))
library(car)
Anova(bigmodel<-glm(Outcome~(Age+Number+Start)^2))
Anova(bigmodel<-glm(Outcome~(Age+Number+Start)^2), data=kyp, family=binomial())
ggplot(kyp, aes(x=(Age+Number+Start)^2,y=Outcome))+geom_point()
?Anova
Anova(bigmodel <- glm(Outcome ~ (Age + Number + Start)^2,
data = kyp, family = binomial), type = "II")
Anova(m <- update(bigmodel, ~. - Age:Start - Number:Start -
Age:Number))
install.packages('alr3')
resid_panel(m)
residuals.glm(m)
residualPlot(m)
residualPlot(m,layout=c(2,2))
?car::residualPlot
residualPlot(m, variable = "fitted", type = "pearson")
Anova(m <- update(bigmodel, ~. - Age:Start - Number:Start -
Age:Number))
residualPlot(m, variable = "fitted", type = "pearson")
m<-glm(Outcome~Age+Start+Number, family = binomial(), data=kyp)
residualPlot(m, variable = "fitted", type = "pearson")
residualPlot(m, variable = "fitted", type = "pearson", layout=c(2,2))
residualPlots(m, variable = "fitted", type = "pearson", layout=c(2,2))
Anova(m <- update(bigmodel, ~. - Age:Start - Number:Start -
Age:Number))
residualPlots(m, variable = "fitted", type = "pearson", layout=c(2,2))
residualPlots(m, type = "pearson", layout=c(2,2))
mmps(m,span=3/4, layout = c(2,2))
Anova(m1 <- update(m, ~. + I(Age^2)))
mmps(m1, span = 3/4)
mmps(m, span = 3/4)
mmps(m1, span = 3/4)
Anova(m1 <- update(m, ~. + I(Age^2)))
mmps(m1, span = 3/4)
mmps(m1, span = 3/4)
library(cars)
library(car)
?mmp
mmp(glm.m_1)
mmp(glm.M_1)
summary(glm.full<-glm(InMichelin~.,family=binomial(),data=df))
summary(glm.full<-glm(InMichelin~Food,Decor,Service,Price.,family=binomial(),data=df))
summary(glm.full<-glm(InMichelin~Food+Decor+Service+Price.,family=binomial(),data=df))
view(df)
summary(glm.full<-glm(InMichelin~(Food+Decor+Service+Price),family=binomial(),data=df))
mmps(glm.full)
10000*.02
10000-200
btc<-.035
#sell btc for usd
btc_price_high<-65000
tax<-.02
btc_account<-.035
#sell btc for usd
btc_price_high<-65000
btc_price_low<-40,000
tax<-.02
usd_account<-0
btc_to_usd_transaction<-function(x){
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return([usd_recieved,tax_paid_in_usd])
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return([usd_recieved,tax_paid_in_usd])
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return([usd_recieved,tax_paid_in_usd])
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return([usd_recieved,tax_paid_in_usd])
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return([usd_recieved,tax_paid_in_usd])
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return([usd_recieved,tax_paid_in_usd])
}
test<-function(x){
print("hello world")
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return(list(usd_recieved,tax_paid_in_usd)
}
btc_to_usd_transaction<-function(btc_account,btc_price){
tax_paid_in_usd<-btc_account*tax*btc_price
usd_recieved<-btc_account*btc_price-tax_paid_in_usd
return(list(usd_recieved,tax_paid_in_usd))
}
btc_to_usd_transaction(btc_account,btc_price_high)
usd_to_btc_transaction<-function(usd_account,btc_price){
tax_paid_in_usd<-usd_account*tax
btc_recieved<-(usd_account-tax_paid_in_usd)/btc_price
return(list(btc_recieved,tax_paid_in_usd))
}
usd_to_btc_transaction(2229.5,btc_price_low)
btc_price_low<-40,000
btc_price_low<-40000
usd_to_btc_transaction(2229.5,btc_price_low)
.0546/.035
45+45
92/2300
65000-90
64910/65000
40/65
summary(glm.full<-glm(InMichelin~(Food+Decor+Service+Price),family=binomial(),data=df))
ypredict<-predict(glm.full)
ggplot(df,aes(x=Food,y=ypredict)+geom_point()
ggplot(df,aes(x=Food,y=ypredict))+geom_point()
ggplot(df,aes(x=Food,y=ypredict))+geom_point()
ypredict<-predict(glm.full,type = 'response')
ggplot(df,aes(x=Food,y=ypredict))+geom_point()
ggplot(df,aes(x=Food,y=ypredict))+geom_point()+geom_smooth(method='loess')
ggplot(df,aes(x=Food,y=ypredict))+geom_point()+geom_smooth(method='loess')+geom_function(fun=f,color='red')
mmps(glm.full)
mmps(glm.full)
glm.full<-update(glm.full,~.+log(Price))
mmps(glm.full)
ggplot(df,aes(x=Decor,y=Service, color=InMichelin))+geom_point()
ggplot(df,aes(x=Decor,y=Service, color=InMichelin))+geom_point()+geom_smooth(method='lm')
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, color=InMichelin))+geom_point()+geom_smooth(method='lm')
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service))+geom_point()+geom_smooth(method='lm')
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, color=factor(InMichelin)))+geom_point()+geom_smooth(method='lm')
ggplot(df%>%group_by(InMichelin),aes(x=Decor,y=Service, color=factor(InMichelin)))+geom_point()+geom_smooth(method='lm', se=FALSE)
glm.full_2<-glm(InMichelin~Food+Decor+Service+Price+log(Price)+Service:Decor)
glm.full_2<-glm(InMichelin~Food+Decor+Service+Price+log(Price)+Service:Decor, family=binomial(),data=df)
mmps(glm.full_2)
mmps(glm.full_2)
mmps(glm.full_2)
anova(glm.full,glm.full_2)
resid_panel(glm.full_2)
resid_panel(glm.full_2, plots='all')
resid_panel(glm.full_2, plots='leverage')
resid_panel(glm.full_2, plots='lev')
ggresid_panel(glm.full_2, plots='lev')
resid_panel(glm.full_2, plots='lev')
resid_interact(glm.full_2, plots='lev')
View(df)
Anova(glm.full,glm.full_2)
library(car)
Anova(glm.full,glm.full_2)
?Anova
anova(glm.full,glm.full_2)
manova(glm.full,glm.full_2)
anova(glm.full,glm.full_2)
pchisq(6.61,1)
pchisq(6.61,1,lower.tail = FALSE)
pchisq(6.61,1,lower.tail = FALSE)
summary(glm.full_2)
glm.2<-glm.full_2
glm.3<-update(glm.2,~.-Price)
anova(glm.2,glm.3)
anova(glm.3,glm.2)
pchisq(1.4,1)
pchisq(1.4,157)
pchisq(1.4,1)
pchisq(1.4,1,lower.tail=FALSE)
summary(glm.3)
mmps(glm.3)
mmps(glm.3)
