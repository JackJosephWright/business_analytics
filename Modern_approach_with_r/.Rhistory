i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
if (mean(df$`sum(bill)`)<0){
d=d-1
}else{
d=d+1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
day_optimizer(0)
day_optimizer()
day_optimizer()
#see if you made money or lost money
pp_sim<-function(TYPE='C', days=d){
df_out<-data.frame(profit=double())
for (i in 1:100){
print(paste('iter:',i))
df<-profit_or_pay(n=100, TYPE=TYPE,days=d)
profit<-df%>%filter(PROFIT==1)%>%summarise(sum(bill))
loss<-df%>%filter(PROFIT==0)%>%summarise(sum(bill))
profit<-profit-loss
df_out<-rbind(df_out,profit)
}
return(df_out)
}
df<-profit_or_pay(TYPE='R')
profit<-df%>%filter(PROFIT==1)%>%summarise(sum(bill))
loss<-df%>%filter(PROFIT==0)%>%summarise(sum(bill))
profit-loss
day_optimizer<-function(d=60){
print('day optimizer running')
df<-pp_sim(days=d)
i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
if (mean(df$`sum(bill)`)<0){
d=d-1
}else{
d=d+1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
#see if you made money or lost money
pp_sim<-function(TYPE='C', days=d){
df_out<-data.frame(profit=double())
for (i in 1:100){
#print(paste('iter:',i))
df<-profit_or_pay(n=100, TYPE=TYPE,days=d)
profit<-df%>%filter(PROFIT==1)%>%summarise(sum(bill))
loss<-df%>%filter(PROFIT==0)%>%summarise(sum(bill))
profit<-profit-loss
df_out<-rbind(df_out,profit)
}
return(df_out)
}
day_optimizer<-function(d=60){
print('day optimizer running')
df<-pp_sim(days=d)
i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
if (mean(df$`sum(bill)`)<0){
d=d-1
}else{
d=d+1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
#see if you made money or lost money
pp_sim<-function(TYPE='C', days=d){
df_out<-data.frame(profit=double())
for (i in 1:10){
#print(paste('iter:',i))
df<-profit_or_pay(n=10, TYPE=TYPE,days=d)
profit<-df%>%filter(PROFIT==1)%>%summarise(sum(bill))
loss<-df%>%filter(PROFIT==0)%>%summarise(sum(bill))
profit<-profit-loss
df_out<-rbind(df_out,profit)
}
return(df_out)
}
df<-profit_or_pay(TYPE='R')
profit<-df%>%filter(PROFIT==1)%>%summarise(sum(bill))
loss<-df%>%filter(PROFIT==0)%>%summarise(sum(bill))
profit-loss
day_optimizer<-function(d=60){
print('day optimizer running')
df<-pp_sim(days=d)
i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
if (mean(df$`sum(bill)`)<0){
d=d-1
}else{
d=d+1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
day_optimizer<-function(d=60){
print('day optimizer running')
df<-pp_sim(days=d)
i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
if (mean(df$`sum(bill)`)<0){
d=d+1
}else{
d=d-1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
day_optimizer<-function(d=60){
print('day optimizer running')
df<-pp_sim(days=d)
i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
print(mean(df$sum(bill)))
if (mean(df$`sum(bill)`)<0){
d=d+1
}else{
d=d-1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
day_optimizer<-function(d=60){
print('day optimizer running')
df<-pp_sim(days=d)
i=1
while(round(mean(df$`sum(bill)`),0)!=0){
df<-pp_sim(days=d)
print('while loop started')
print(paste('iter:',i,'days:',d))
print(mean(df$`sum(bill)`))
if (mean(df$`sum(bill)`)<0){
d=d+1
}else{
d=d-1
}
i=i+1
}
print(paste('the optimal number of days is:',d))
}
day_optimizer()
knitr::opts_chunk$set(echo = TRUE)
integrand<-function(x){1/((x+1)*sqrt(x))}
integrate(integrand, lower=0, upper=Inf)
integrand_res<-function(x){-.1909*x+101.7}
integrand_com<-function(x){-.1909*x+101.7}
integrand_res=function(x){(-1.909+.35664)*x+(101-99)}
max(dat$BILL)
min(dat$BILL)
-1.909+.35664
-.1909+.35664
install.packages('polynom')
library(polynom)
p<-(-1.909+.35664)*x+(101-99)
p<-polynomial(c((101-99),(-1.909+.35664)))
p<-polynomial(c((101-99-60),(-1.909+.35664)))
solve(p)
solve(1.66-58)
solve(1.66,58)
bill_60<-solve(1.66,58)
bill_60<-solve(.166,58)
(bill_60<-solve(.166,58))
(bill_60_commercial<-solve(-.19, (60-101.7)))
min<-min(dat$BILL)
max<-max(dat$BILL)
break<-bill_60
break<-bill_60_commercial
crossover<-bill_60_commercial
income<-integrate(integrand,lower=crossover,upper = max)
income
income<-integrate(integrand_com,lower=crossover,upper = max)
income
hist(dat%>%filter(TYPE=='COMMERCIAL'))
library(tidyverse)
hist(dat%>%filter(TYPE=='COMMERCIAL'))
dat%>%filter(TYPE=='COMMERCIAL')
hist(dat%>%filter(TYPE=='COMMERCIAL')%>%select(BILL))
dat%>%filter(TYPE=='COMMERCIAL')%>%select(BILL)
ggplot(dat%>%filter(TYPE=='COMMERCIAL'), aes(x=BILL))+geom_histogram()
cost_com<-dat%>%filter(TYPE='COMMERCIAL' & BILL>bill_60_commercial)
cost_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL>bill_60_commercial)
cost_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
cost_com
cost_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL<bill_60_commercial)%>%summarize(sum(BILL))
income_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
(profit=income_com-cost_com)
#profits from residential debts
cost_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL<bill_60_commercial)%>%summarize(sum(BILL))
income_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
(profit=income_com-cost_com)
#profits from residential debts
cost_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL<bill_60_commercial)%>%summarize(sum(BILL))
income_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
(profit=income_res-cost_res)
#profits from residential debts
cost_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL<bill_60)%>%summarize(sum(BILL))
income_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL>bill_60)%>%summarize(sum(BILL))
(profit=income_res-cost_res)
(bill_60<-solve(.166,58))
#profit from commmercial debts
cost_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL<bill_60_commercial)%>%summarize(sum(BILL))
income_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
(profit=income_com-cost_com)
#profits from residential debts
cost_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL>bill_60)%>%summarize(sum(BILL))
income_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL<bill_60)%>%summarize(sum(BILL))
(profit=income_res-cost_res)
#profit from commmercial debts
cost_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL<bill_60_commercial)%>%summarize(sum(BILL))
income_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
(profit_com=income_com-cost_com)
#profits from residential debts
cost_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL>bill_60)%>%summarize(sum(BILL))
income_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL<bill_60)%>%summarize(sum(BILL))
(profit_res=income_res-cost_res)
(profit_res+profit_com)
com_profit_pre_promo<-dat%>%filter(TYPE=='COMMERCIAL' )%>%summarize(sum(BILL))
res_profit_pre_promo<-profit_res
com_profit_pre_promo<-dat%>%filter(TYPE=='COMMERCIAL' )%>%summarize(sum(BILL))
res_profit_pre_promo<-profit_res
(profit_res+profit_com)
(profit_res+profit_com/(com_profit_pre_promo+res_profit_pre_promo))
com_profit_pre_promo<-dat%>%filter(TYPE=='COMMERCIAL' )%>%summarize(sum(BILL))
res_profit_pre_promo<-profit_res
(profit_res+profit_com/(com_profit_pre_promo+res_profit_pre_promo))
com_profit_pre_promo
profit_com
profit_promo<-profit_res+profit_com
profit_promo
profit_null<-com_profit_pre_promo+res_profit_pre_promo
profit_null
com_profit_pre_promo
profit_promo/profit_null
C=profit_null*1/percentage_income
com_profit_pre_promo<-dat%>%filter(TYPE=='COMMERCIAL' )%>%summarize(sum(BILL))
res_profit_pre_promo<-profit_res
profit_promo<-profit_res+profit_com
profit_null<-com_profit_pre_promo+res_profit_pre_promo
percentage_income<-profit_promo/profit_null
(C=profit_null*1/percentage_income)
(C/profit_null))
(C/profit_null)
knitr::opts_chunk$set(echo = TRUE)
file<-here('data','overdue.txt')
file<-here('data','overdue.txt')
library(here)
library(tidyverse)
file<-here('data','overdue.txt')
dat<-read.table(file, header=TRUE)
#create residential vs commercial factor
dat_res<-dat[1:48,]%>%mutate(TYPE='RESIDENTIAL')
dat_com<-dat[-(1:48),]%>%mutate(TYPE='COMMERCIAL')
dat<-rbind(dat_res, dat_com)
library(GGally)
ggpairs(dat, mapping=(aes(color=TYPE)))
summary(lm.full<-lm(LATE~BILL+TYPE, data=dat))
summary(lm.full<-lm(LATE~BILL, data=dat))
summary(lm.split<-lm(LATE~BILL+TYPE+TYPE:BILL:., data=dat))
anova(lm.full,lm.split)
(bill_60<-solve(.166,58))
(bill_60_commercial<-solve(-.19, (60-101.7)))
#profit from commmercial debts
cost_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL<bill_60_commercial)%>%summarize(sum(BILL))
income_com<-dat%>%filter(TYPE=='COMMERCIAL' & BILL>bill_60_commercial)%>%summarize(sum(BILL))
(profit_com=income_com-cost_com)
#profits from residential debts
cost_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL>bill_60)%>%summarize(sum(BILL))
income_res<-dat%>%filter(TYPE=='RESIDENTIAL' & BILL<bill_60)%>%summarize(sum(BILL))
(profit_res=income_res-cost_res)
com_profit_pre_promo<-dat%>%filter(TYPE=='COMMERCIAL' )%>%summarize(sum(BILL))
res_profit_pre_promo<-profit_res
profit_promo<-profit_res+profit_com
profit_null<-com_profit_pre_promo+res_profit_pre_promo
percentage_income<-profit_promo/profit_null
com_profit_pre_promo<-dat%>%filter(TYPE=='COMMERCIAL' )%>%summarize(sum(BILL))
res_profit_pre_promo<-profit_res
profit_promo<-profit_res+profit_com
profit_null<-com_profit_pre_promo+res_profit_pre_promo
(percentage_income<-profit_promo/profit_null)
(C=profit_null*1/percentage_income)
(C/profit_null)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
file<-here('data','nyc.csv')
dat<-read.csv(file)
View(dat)
ggpairs(dat)
library(GGally)
ggpairs(dat)
ggpairs(dat%>%select(-Restaurant))
ggpairs(dat%>%select(c(Food, Decor, Service)))
lm.model<-lm(PRICE~.,data=dat%>%select(-Restaurant))
View(dat)
lm.model<-lm(Price~.,data=dat%>%select(-c(Restaurant,Case))
library(ggResidpanel)
library(ggResidpanel)
resid_panel(lm.model)
lm.model<-lm(Price~.,data=dat%>%select(-c(Restaurant,Case))
resid_panel(lm.model)
resid_panel(lm.model)
lm.model<-lm(Price~.,data=dat%>%select(-c(Restaurant,Case))
library(ggResidpanel)
lm.model<-lm(Price~.,data=dat%>%select(-c(Restaurant,Case)))
library(ggResidpanel)
resid_panel(lm.model)
resid_panel(lm.model, plots = 'all')
file<-here('data','nonlinear.txt')
dat<-read.table(file)
file<-here('data','nonlinearx.txt')
dat<-read.table(file)
View(dat)
dat<-read.table(file, header=TRUE)
View(dat)
ggpairs(dat)
lm.model<-lm(y~.,data=dat)
library(ggResidpanel)
resid_panel(lm.model, plots = 'all')
resid_xpanel(lm.model)
model<-lm(y~x1+x2+...,data=df)
model<-lm(y~x1+x2,data=dat)
avPlots(model)
library(car)
library(car)
model<-lm(y~x1+x2,data=dat)
avPlots(model)
model<-lm(mpg~disp+hp+drat, data=mtcars)
summary(model)
avPlots(model)
library(tidyverse)
library(here)
file<-here('data','nyc.csv')
dat<-read.csv(file)
ggpairs(dat)
ggpairs(dat%>%(-Restaurant))
ggpairs(dat%>%select(-Restaurant))
ggpairs(dat%>%select(-c(Restaurant,case)))
ggpairs(dat%>%select(-c(Restaurant,Case)))
model<-lm(Price~., data=dat%>%select(-c(Restaurant,Case)))
avPlot(model)
model<-lm(Price~., data=dat%>%select(-c(Restaurant,Case)))
avPlot(model)
avPlots(model)
file<-here('data','defects.txt')
dat<-read.table(file,header=TRUE)
View(dat)
ggpairs(dat)
ggpairs(dat%>%select(Defective,Temperature,Density, Rate))
model<-lm(Defective~Temperature, Density, Rate, data=dat%>%select(-Case))
summary(model<-lm(Defective~Temperature, Density, Rate, data=dat%>%select(-Case)))
summary(model<-lm(Defective~Temperature+Density+Rate, data=dat%>%select(-Case)))
resid_panel(model)
resid_xpanel(model)
resid_panel(model)
resid_panel(model, plots='all')
resid_xpanel(model)
model$fitted.values
df=data.frame(y_hat=model$fitted.values,Defective=dat$Defective)
ggplot(df, aes(x=Defective, y=y_hat))+geom_point()
summary(model_transform<-lm(sqrt(Defective)~Temperature+Density+Rate, data=dat)
summary(model_transform<-lm(sqrt(Defective)~Temperature+Density+Rate, data=dat))
View(dat)
summary(model_transform<-lm(sqrt(Defective)~Temperature+Density+Rate, data=dat))
boxCox(dat)
?boxcox
boxCox(dat$Defective)
summary(model<-lm(Defective~Temperature+Density+Rate, data=dat%>%select(-Case)))
boxCox(model)
bc<-boxcox(model)
bc<-boxCox(model)
(lambda<-bc$x[which.max(bc$y)])
file<-here('data','magazines.csv')
dat<-read_csv(file)
View(dat)
View(dat)
ggpairs(dat)
View(bc)
View(dat)
ggpairs(dat%>%select(c(AdRevenue,AdPages,SubRevenue)))
ggpairs(dat%>%select(c(AdRevenue,AdPages,SubRevenue.NewsRevenue)))
ggpairs(dat%>%select(c(AdRevenue,AdPages,SubRevenue,NewsRevenue)))
dat<-dat%>%select(c(AdRevenue,AdPages,SubRevenue,NewsRevenue)
box.cox.powers(dat)
dat<-dat%>%select(c(AdRevenue,AdPages,SubRevenue,NewsRevenue))
box.cox.powers(dat)
powerTransform(dat)
install.packages(alr3)
install.packages('alr3')
dat%>%mutate_at(c('AdPages','SubRevenue','NewsRevenue',log))
dat%>%mutate_at(c('AdPages','SubRevenue','NewsRevenue'),log)
dat<-dat%>%mutate_at(c('AdPages','SubRevenue','NewsRevenue'),log)
ggpairs(dat)
file<-here('data','magazines.csv')
dat<-read_csv(file)
dat_2<-dat%>%mutate_all(.,log)
dat_2<-mutate_all(dat,log)
library(car)
dat<-dat%>%select(c(AdRevenue,AdPages,SubRevenue,NewsRevenue))
powerTransform(dat)
dat_2<-mutate_all(dat,log)
ggpairs(dat_2)
dat<-read_table(here('data','circulation.txt'),header=TRUE)
dat<-read_table(here('data','circulation.txt'))
file<-here('data','circulation.txt')
dat<-read_table(file,header=TRUE)
dat<-read_table(file)
View(dat)
dat<-read_table(file, header=TRUE)
View(dat)
dat<-read_table(file)
file<-here('data','circulation.txt')
dat<-read_table(file)
View(dat)
file<-here('data','circulation2.txt')
dat<-read_table(file)
View(dat)
file<-here('data','circulation.txt')
dat<-read_table(file)
dat<-read_table(file, header=TRUE)
dat<-read_csv(file, header=TRUE)
file<-here('data','circulation.txt')
dat<-read_csv(file, sep='\t')
file<-here('data','circulation.txt')
dat<-read_csv(file)
View(dat)
dat<-read_csv(file, sep="\t")
file<-here('data','circulation.txt')
dat<-read_csv(file, sep="\t")
dat<-read_table(file, sep="\t")
?read_table
file<-here('data','circulation.txt')
dat<-read_table(file, sep="\t")
dat<-read_table(file)
View(dat)
dat<-read.table(file, sep="\t")
View(dat)
dat<-read.table(file, sep="\t", header=TRUE)
View(dat)
df<-dat%>%select(-Newspaper)
ggpairs(df)
View(df)
df<-df%>%mutate_at(c(Sunday,Weekday),log)
df<-df%>%mutate_at(c(Sunday,Weekday),log)
df<-df%>%mutate_at(c("Sunday","Weekday"),log)
ggpairs(df)
summary(lm.model<-lm(Sunday~.,data=df))
predict(lm.model, 210000)
?predict
predict(lm.model, newdata=data.frame(210000))
summary(lm.model<-lm(Sunday~.,data=df))
predict(lm.model, newdata=data.frame(210000))
predict(lm.model)
predict(lm.model, c(210000))
predict(lm.model, newdata=data.frame(x=210000))
predict(lm.model, newdata=data.frame(Weekday=210000))
predict(lm.model, newdata=data.frame(Weekday=210000), interval = 'predict')
predict(lm.model, newdata=data.frame(Weekday=210000,1), interval = 'predict')
rep(210000,2)''
rep(210000,2)
seq(1,2)
seq(0:1,2)
0:1
predict(lm.model, newdata=data.frame(Weekday=rep(210000,competitor=0:1),competitor), interval = 'predict')
View(df)
predict(lm.model, newdata=data.frame(Weekday=rep(210000,2),competitor=0:1), interval = 'predict')
summary(lm.model<-lm(Sunday~.,data=df))
predict(lm.model, newdata=data.frame(Weekday=rep(210000,2),competitor=0:1), interval = 'predict')
11.7*210000
(1+.117)*210000
(1+.1202)*210000
predict(lm.model, newdata=data.frame(Weekday=rep(210000,2),competitor=c(0,1)), interval = 'predict')
predict(lm.model, newdata=data.frame(Weekday=rep(210000,210000),competitor=c(0,1)), interval = 'predict')
predict(lm.model, newdata=data.frame(Weekday=c(210000,210000),competitor=c(0,1)), interval = 'predict')
predict(lm.model, newdata=data.frame(Weekday=c(log(210000),log(210000)),competitor=c(0,1)), interval = 'predict')
predictions<-predict(lm.model, newdata=data.frame(Weekday=c(log(210000),log(210000)),competitor=c(0,1)), interval = 'predict')
(predictions<-predict(lm.model, newdata=data.frame(Weekday=c(log(210000),log(210000)),competitor=c(0,1)), interval = 'predict'))
as.data.frame(predictions)
as.data.frame(predictions)%>%mutate_all(.,exp)
